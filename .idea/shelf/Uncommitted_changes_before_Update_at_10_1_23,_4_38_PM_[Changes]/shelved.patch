Index: app/src/main/java/com/example/kleine/fragments/shopping/MaterialPreviewFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.fragments.shopping\n\nimport android.annotation.SuppressLint\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ImageView\nimport android.widget.TextView\nimport android.widget.Toast\nimport androidx.constraintlayout.widget.ConstraintLayout\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.Observer\nimport androidx.navigation.Navigation.findNavController\nimport androidx.navigation.fragment.findNavController\nimport androidx.recyclerview.widget.RecyclerView\nimport androidx.viewpager2.widget.ViewPager2\nimport com.bumptech.glide.Glide\nimport com.example.kleine.R\nimport com.example.kleine.adapters.viewpager.ViewPager2Images\nimport com.example.kleine.databinding.FragmentProductPreviewBinding\nimport com.example.kleine.databinding.FragmentTempCommentBinding\nimport com.example.kleine.model.CommentWithUserDetails\nimport com.example.kleine.model.Enrollment\nimport com.example.kleine.model.Material\nimport com.example.kleine.viewmodel.comment.CommentViewModel\nimport com.example.kleine.viewmodel.user.UserViewModel\nimport com.google.android.material.card.MaterialCardView\nimport com.google.firebase.auth.FirebaseAuth\nimport com.google.firebase.firestore.FirebaseFirestore\nimport com.google.firebase.storage.FirebaseStorage\n\n\n\nclass MaterialPreviewFragment : Fragment() {\n    private var _binding: FragmentProductPreviewBinding? = null\n    private val binding get() = _binding!!\n    private var material: Material? = null\n\n    private val viewPagerAdapter = ViewPager2Images()\n\n    private val firebaseAuth: FirebaseAuth = FirebaseAuth.getInstance()\n    private val firestore: FirebaseFirestore = FirebaseFirestore.getInstance()\n\n    //comment use\n    private var areCommentsVisible = true\n    val userViewModel: UserViewModel by viewModels()\n    val commentViewModel: CommentViewModel by viewModels {\n        CommentViewModel.CommentViewModelFactory(userViewModel)\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        _binding = FragmentProductPreviewBinding.inflate(inflater, container, false)\n        return binding.root\n    }\n\n    @SuppressLint(\"SuspiciousIndentation\")\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        onEnrollClick()\n\n        // Retrieve the passed argument\n        material = arguments?.getParcelable(\"material\")\n\n        material?.let { mat ->\n            binding.productModel = mat\n\n            // Load the image using Glide\n            Glide.with(this)\n                .load(mat.imageUrl)\n                .into(binding.materialImage)\n\n        } ?: run {\n            Log.e(\"MaterialPreviewFragment\", \"Material is null!\")\n        }\n\n        //comment use\n        val adapter = CommentsAdapter(listOf())\n        binding.allMaterialComment.materialCommentData.adapter = adapter\n\n        val materialId = material?.id\n        commentViewModel.fetchComments(materialId.toString())\n\n        commentViewModel.commentsWithUserDetails.observe(viewLifecycleOwner, Observer { commentsWithUserDetails ->\n            val sortedComments = commentsWithUserDetails.sortedByDescending {\n                it.comment.commentDate\n            }\n\n            adapter.setData(sortedComments)\n        })\n\n        binding.allMaterialComment.commentTitle.setOnClickListener {\n            toggleComments()\n        }\n        binding.allMaterialComment.downArrowComment.setOnClickListener {\n            toggleComments()\n        }\n    }\n\n\n\n    private fun onEnrollClick() {\n        binding.btnEnroll.setOnClickListener {\n            Log.d(\"MaterialPreviewFragment\", \"Button Clicked\")\n\n            // Get the current user ID\n            val userId = firebaseAuth.currentUser?.uid ?: run {\n                Toast.makeText(context, \"User not logged in!\", Toast.LENGTH_SHORT).show()\n                return@setOnClickListener\n            }\n\n            // Get the selected material ID\n            val materialId = material?.id ?: run {\n                Toast.makeText(context, \"Material ID is null!\", Toast.LENGTH_SHORT).show()\n                return@setOnClickListener\n            }\n\n            // Reference to the material document\n            val materialRef = firestore.collection(\"Materials\").document(materialId)\n\n            firestore.runTransaction { transaction ->\n                // Get the current state of the material\n                val snapshot = transaction.get(materialRef)\n\n                // Increment the enroll field value\n                val newEnrollValue = snapshot.getLong(\"enroll\")?.plus(1) ?: 1L\n\n                // Update the enroll field\n                transaction.update(materialRef, \"enroll\", newEnrollValue)\n\n                // Create a new Enrollment object\n                val enrollment = Enrollment(userId = userId, materialId = materialId)\n\n                // Add the enrollment document and return the newEnrollValue for further use if needed\n                transaction.set(firestore.collection(\"enrollments\").document(), enrollment)\n                newEnrollValue\n            }.addOnSuccessListener {\n                Toast.makeText(context, \"Successfully enrolled in the course!\", Toast.LENGTH_SHORT).show()\n\n                // Navigate back to HomeFragment\n                findNavController().navigateUp()\n            }.addOnFailureListener { exception ->\n                Log.w(\"MaterialPreviewFragment\", \"Error adding document\", exception)\n                Toast.makeText(context, \"Error enrolling in the course!\", Toast.LENGTH_SHORT).show()\n            }\n        }\n    }\n\n\n\n\n    override fun onDestroyView() {\n        super.onDestroyView()\n        _binding = null\n    }\n\n\n    //comment use\n    private fun toggleComments() {\n        // Toggle the visibility of the RecyclerView\n        if (areCommentsVisible) {\n            binding.allMaterialComment.materialCommentData.visibility = View.GONE\n            binding.allMaterialComment.downArrowComment.animate().rotation(0f).setDuration(300).start() // Rotate to initial position\n        } else {\n            binding.allMaterialComment.materialCommentData.visibility = View.VISIBLE\n            binding.allMaterialComment.downArrowComment.animate().rotation(180f).setDuration(300).start() // Rotate 180 degrees\n        }\n        // Update the state\n        areCommentsVisible = !areCommentsVisible\n    }\n\n    inner class CommentsAdapter(\n        private var commentsWithUserDetails: List<CommentWithUserDetails>\n    ) : RecyclerView.Adapter<CommentsAdapter.CommentViewHolder>() {\n        inner class CommentViewHolder(view: View) : RecyclerView.ViewHolder(view) {\n            val commentTextView: TextView = view.findViewById(R.id.userComment)\n            val commentDateTextView: TextView = view.findViewById(R.id.userCommentDate)\n            val userNameTextView: TextView = view.findViewById(R.id.commentUserTextTitle)\n            val userImageView: ImageView = view.findViewById(R.id.userImage)\n            val replyTextView: TextView = view.findViewById(R.id.userReplyText)\n            val replyDateTextView: TextView = view.findViewById(R.id.replyCommentDate)\n            val partnerNameTextView: TextView = view.findViewById(R.id.commentReplyUserTextTitle)\n            val partnerImageView: ImageView = view.findViewById(R.id.partnerImage)\n            val ratingTextView: TextView = view.findViewById(R.id.rating)\n            val replyCommentDate: TextView = view.findViewById(R.id.replyCommentDate)\n            val arrow: MaterialCardView = view.findViewById(R.id.firstReplyCommentArrowImg)\n            val firstReplyCommentImg: MaterialCardView = view.findViewById(R.id.firstReplyCommentImg)\n            val userReplyCommentCard: ConstraintLayout = view.findViewById(R.id.userReplyCommentCard)\n        }\n\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): CommentViewHolder {\n            val view = LayoutInflater.from(parent.context).inflate(R.layout.recycler_view_material_comment, parent, false)\n            return CommentViewHolder(view)\n        }\n\n        override fun onBindViewHolder(holder: CommentViewHolder, position: Int) {\n            val commentWithUserDetails = commentsWithUserDetails[position]\n            val comment = commentWithUserDetails.comment\n            holder.commentTextView.text = comment.comment\n            holder.commentDateTextView.text = comment.commentDate\n            holder.userNameTextView.text = commentWithUserDetails.userName\n            holder.ratingTextView.text = comment.rating.toString()\n            if (commentWithUserDetails.userImage != null) {\n                val storageReference = FirebaseStorage.getInstance().getReferenceFromUrl(commentWithUserDetails.userImage)\n                storageReference.downloadUrl.addOnSuccessListener { uri ->\n                    Glide.with(holder.userImageView.context)\n                        .load(uri.toString())\n                        .into(holder.userImageView)\n                }\n            }\n            if (commentWithUserDetails.partnerName != null) {\n                holder.replyTextView.text = comment.replyComment\n                holder.replyDateTextView.text = comment.replyDate\n                holder.partnerNameTextView.text = commentWithUserDetails.partnerName\n                if (commentWithUserDetails.partnerImage != null) {\n                    val storageReference = FirebaseStorage.getInstance().getReferenceFromUrl(commentWithUserDetails.partnerImage)\n                    storageReference.downloadUrl.addOnSuccessListener { uri ->\n                        Glide.with(holder.partnerImageView.context)\n                            .load(uri.toString())\n                            .into(holder.partnerImageView)\n                    }\n                }\n            } else {\n                holder.arrow.visibility = View.GONE\n                holder.firstReplyCommentImg.visibility = View.GONE\n                holder.userReplyCommentCard.visibility = View.GONE\n                holder.replyCommentDate.visibility = View.GONE\n            }\n        }\n\n\n\n\n        override fun getItemCount(): Int {\n            return commentsWithUserDetails.size\n        }\n\n        fun setData(newCommentsWithUserDetails: List<CommentWithUserDetails>) {\n            this.commentsWithUserDetails = newCommentsWithUserDetails\n            notifyDataSetChanged()\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/fragments/shopping/MaterialPreviewFragment.kt b/app/src/main/java/com/example/kleine/fragments/shopping/MaterialPreviewFragment.kt
--- a/app/src/main/java/com/example/kleine/fragments/shopping/MaterialPreviewFragment.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/fragments/shopping/MaterialPreviewFragment.kt	(date 1696148584087)
@@ -143,7 +143,7 @@
                 Toast.makeText(context, "Successfully enrolled in the course!", Toast.LENGTH_SHORT).show()
 
                 // Navigate back to HomeFragment
-                findNavController().navigateUp()
+                findNavController().navigate(R.id.action_materialDetailsFragment_to_homeFragment)
             }.addOnFailureListener { exception ->
                 Log.w("MaterialPreviewFragment", "Error adding document", exception)
                 Toast.makeText(context, "Error enrolling in the course!", Toast.LENGTH_SHORT).show()
@@ -154,6 +154,7 @@
 
 
 
+
     override fun onDestroyView() {
         super.onDestroyView()
         _binding = null
Index: app/src/main/java/com/example/kleine/fragments/settings/HelpFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.fragments.settings\n\nimport android.content.Intent\nimport android.net.Uri\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.fragment.app.Fragment\nimport androidx.navigation.fragment.findNavController\nimport com.example.kleine.R\nimport com.example.kleine.databinding.FragmentHelpBinding\nimport com.example.kleine.databinding.FragmentProfileBinding\n\nclass HelpFragment : Fragment(R.layout.fragment_help) {\n    private lateinit var binding:FragmentHelpBinding\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        binding = FragmentHelpBinding.inflate(inflater)\n        return binding.root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        binding.imgEmail.setOnClickListener { openEmailApp() }\n        binding.imgPhone.setOnClickListener { openCallApp() }\n        binding.imgCloseHelp.setOnClickListener { findNavController().navigateUp() }\n    }\n\n    private fun openCallApp() {\n        val callIntent: Intent = Uri.parse(\"tel:123123123123\").let { number ->\n            Intent(Intent.ACTION_DIAL, number)\n        }.also { startActivity(it) }\n    }\n\n    private fun openEmailApp() {\n        Intent(Intent.ACTION_SEND).apply {\n            type = \"text/plain\"\n            putExtra(Intent.EXTRA_EMAIL, arrayOf(\"kleine@gmail.com\")) // recipients\n            putExtra(Intent.EXTRA_SUBJECT, \"\")\n            putExtra(Intent.EXTRA_TEXT, \"\")\n            putExtra(Intent.EXTRA_STREAM, Uri.parse(\"content://path/to/email/attachment\"))\n        }.also { startActivity(it) }\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/fragments/settings/HelpFragment.kt b/app/src/main/java/com/example/kleine/fragments/settings/HelpFragment.kt
--- a/app/src/main/java/com/example/kleine/fragments/settings/HelpFragment.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/fragments/settings/HelpFragment.kt	(date 1696147225935)
@@ -33,7 +33,7 @@
     }
 
     private fun openCallApp() {
-        val callIntent: Intent = Uri.parse("tel:123123123123").let { number ->
+        val callIntent: Intent = Uri.parse("tel:013-7121698").let { number ->
             Intent(Intent.ACTION_DIAL, number)
         }.also { startActivity(it) }
     }
@@ -41,7 +41,7 @@
     private fun openEmailApp() {
         Intent(Intent.ACTION_SEND).apply {
             type = "text/plain"
-            putExtra(Intent.EXTRA_EMAIL, arrayOf("kleine@gmail.com")) // recipients
+            putExtra(Intent.EXTRA_EMAIL, arrayOf("ckrgrammm@gmail.com")) // recipients
             putExtra(Intent.EXTRA_SUBJECT, "")
             putExtra(Intent.EXTRA_TEXT, "")
             putExtra(Intent.EXTRA_STREAM, Uri.parse("content://path/to/email/attachment"))
Index: app/src/main/java/com/example/kleine/fragments/shopping/AddMaterialFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.fragments.shopping\n\nimport android.app.Activity\nimport android.content.Intent\nimport android.net.Uri\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.RadioButton\nimport android.widget.Toast\nimport androidx.fragment.app.Fragment\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.navigation.fragment.findNavController\nimport com.example.kleine.databinding.MaterialAddBinding\nimport com.example.kleine.model.Material\nimport com.example.kleine.viewmodel.material.MaterialViewModel\nimport com.google.firebase.auth.FirebaseAuth\n\n\nclass AddMaterialFragment : Fragment() {\n\n    private lateinit var binding: MaterialAddBinding // Corrected binding class name\n    private lateinit var viewModel: MaterialViewModel\n\n\n    private val REQUEST_CODE_IMAGE_PICK = 1\n    private val REQUEST_CODE_DOCUMENT_PICK = 2\n\n    private var selectedImageUri: Uri? = null\n    private var selectedDocumentUri: Uri? = null\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        binding = MaterialAddBinding.inflate(inflater, container, false)\n        return binding.root\n    }\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        viewModel = ViewModelProvider(this).get(MaterialViewModel::class.java)\n        // Retrieve the user's document ID (replace with your actual method)\n        val userDocumentId = getUserDocumentId()\n        binding.textViewPartnershipID.text = \"Partnership ID: $userDocumentId\"\n\n\n        binding.buttonSelectImage.setOnClickListener {\n            val intent = Intent(Intent.ACTION_PICK)\n            intent.type = \"image/*\"\n            startActivityForResult(intent, REQUEST_CODE_IMAGE_PICK)\n        }\n\n        binding.buttonUploadDocument.setOnClickListener {\n            val intent = Intent(Intent.ACTION_OPEN_DOCUMENT)\n            intent.addCategory(Intent.CATEGORY_OPENABLE)\n            intent.type = \"*/*\" // Set type to */*\n            // Use Intent.EXTRA_MIME_TYPES to allow both images and PDFs\n            intent.putExtra(Intent.EXTRA_MIME_TYPES, arrayOf(\"image/*\", \"application/pdf\"))\n            startActivityForResult(intent, REQUEST_CODE_DOCUMENT_PICK)\n        }\n\n        binding.buttonSubmit.setOnClickListener {\n            // Validate and get data from UI elements\n            val name = binding.editTextName.text.toString()\n            val description = binding.editTextDesc.text.toString()\n\n            val selectedCategoryId = binding.radioGroupCategory.checkedRadioButtonId\n            if (selectedCategoryId == -1) {\n                Toast.makeText(requireContext(), \"Please select a category\", Toast.LENGTH_SHORT).show()\n                return@setOnClickListener\n            }\n            val selectedCategoryButton = view.findViewById<RadioButton>(selectedCategoryId)\n            val category = selectedCategoryButton.text.toString()\n\n\n            // Get the selected status from the RadioGroup\n            val selectedStatusId = binding.radioGroupStatus.checkedRadioButtonId\n            if (selectedStatusId == -1) {\n                Toast.makeText(requireContext(), \"Please select a status\", Toast.LENGTH_SHORT).show()\n                return@setOnClickListener\n            }\n            val selectedRadioButton = view.findViewById<RadioButton>(selectedStatusId)\n            val status = selectedRadioButton.text.toString()\n\n            if (name.isNotEmpty() && description.isNotEmpty() && category.isNotEmpty()) {\n                val material = Material(\n                    name = name,\n                    desc = description,\n                    category = category,\n                    status = status,\n                    partnershipsID = userDocumentId // Set the user's document ID here\n                )\n\n                // Call ViewModel to add material and upload selected files\n                viewModel.addMaterial(material, selectedImageUri, selectedDocumentUri)\n\n                // Show a success message using a toast\n                Toast.makeText(requireContext(), \"Material submitted successfully\", Toast.LENGTH_SHORT).show()\n\n                // Navigate up (assuming you are using Navigation Component)\n                findNavController().navigateUp()\n            } else {\n                Toast.makeText(requireContext(), \"Please fill all fields\", Toast.LENGTH_SHORT).show()\n            }\n        }\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (resultCode == Activity.RESULT_OK) {\n            when (requestCode) {\n                REQUEST_CODE_IMAGE_PICK -> {\n                    selectedImageUri = data?.data\n                    binding.imageViewCourseBanner.setImageURI(selectedImageUri)\n                }\n                REQUEST_CODE_DOCUMENT_PICK -> {\n                    selectedDocumentUri = data?.data // Here, remove the val keyword\n                    val mimeType = context?.contentResolver?.getType(selectedDocumentUri!!)\n                    if (mimeType == \"application/pdf\" || mimeType?.startsWith(\"image/\") == true) {\n                        // Handle the selected PDF or image\n                        binding.textViewDocumentStatus.text = \"Document has been uploaded.\"\n                    } else {\n                        // Show an error message for unsupported file type\n                        Toast.makeText(context, \"Unsupported file type. Please select an image or PDF.\", Toast.LENGTH_SHORT).show()\n                    }\n                }\n            }\n        }\n    }\n\n\n\n\n    private fun getUserDocumentId(): String {\n        // Initialize Firebase Authentication\n        val auth = FirebaseAuth.getInstance()\n\n        // Check if a user is currently authenticated\n        val user = auth.currentUser\n\n        // If a user is authenticated, you can retrieve their UID (user ID)\n        return user?.uid ?: \"\"\n    }\n\n\n\n    companion object {\n        private const val REQUEST_CODE_IMAGE_PICK = 1\n        private const val REQUEST_CODE_DOCUMENT_PICK = 2\n    }\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/fragments/shopping/AddMaterialFragment.kt b/app/src/main/java/com/example/kleine/fragments/shopping/AddMaterialFragment.kt
--- a/app/src/main/java/com/example/kleine/fragments/shopping/AddMaterialFragment.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/fragments/shopping/AddMaterialFragment.kt	(date 1696148911501)
@@ -49,6 +49,11 @@
             val intent = Intent(Intent.ACTION_PICK)
             intent.type = "image/*"
             startActivityForResult(intent, REQUEST_CODE_IMAGE_PICK)
+
+            if (selectedImageUri == null) {
+                Toast.makeText(requireContext(), "Please select an image", Toast.LENGTH_SHORT).show()
+                return@setOnClickListener
+            }
         }
 
         binding.buttonUploadDocument.setOnClickListener {
@@ -66,30 +71,31 @@
             val description = binding.editTextDesc.text.toString()
 
             val selectedCategoryId = binding.radioGroupCategory.checkedRadioButtonId
-            if (selectedCategoryId == -1) {
-                Toast.makeText(requireContext(), "Please select a category", Toast.LENGTH_SHORT).show()
-                return@setOnClickListener
-            }
             val selectedCategoryButton = view.findViewById<RadioButton>(selectedCategoryId)
             val category = selectedCategoryButton.text.toString()
 
-
-            // Get the selected status from the RadioGroup
             val selectedStatusId = binding.radioGroupStatus.checkedRadioButtonId
-            if (selectedStatusId == -1) {
-                Toast.makeText(requireContext(), "Please select a status", Toast.LENGTH_SHORT).show()
-                return@setOnClickListener
-            }
             val selectedRadioButton = view.findViewById<RadioButton>(selectedStatusId)
             val status = selectedRadioButton.text.toString()
 
-            if (name.isNotEmpty() && description.isNotEmpty() && category.isNotEmpty()) {
+            // Check if image and document are selected
+            if (selectedImageUri == null) {
+                Toast.makeText(requireContext(), "Please select an image", Toast.LENGTH_SHORT).show()
+                return@setOnClickListener
+            }
+
+            if (selectedDocumentUri == null) {
+                Toast.makeText(requireContext(), "Please upload a document", Toast.LENGTH_SHORT).show()
+                return@setOnClickListener
+            }
+
+            if (name.isNotEmpty() && description.isNotEmpty() && category.isNotEmpty() && selectedCategoryId != -1 && selectedStatusId != -1) {
                 val material = Material(
                     name = name,
                     desc = description,
                     category = category,
                     status = status,
-                    partnershipsID = userDocumentId // Set the user's document ID here
+                    partnershipsID = userDocumentId
                 )
 
                 // Call ViewModel to add material and upload selected files
@@ -112,7 +118,15 @@
             when (requestCode) {
                 REQUEST_CODE_IMAGE_PICK -> {
                     selectedImageUri = data?.data
-                    binding.imageViewCourseBanner.setImageURI(selectedImageUri)
+
+                    // Check MIME type
+                    val mimeType = context?.contentResolver?.getType(selectedImageUri!!)
+                    if (mimeType != null && (mimeType == "image/jpeg" || mimeType == "image/png")) {
+                        binding.imageViewCourseBanner.setImageURI(selectedImageUri)
+                    } else {
+                        Toast.makeText(context, "Please select a valid image type (JPEG or PNG)", Toast.LENGTH_SHORT).show()
+                        selectedImageUri = null // Reset the URI since it's not valid
+                    }
                 }
                 REQUEST_CODE_DOCUMENT_PICK -> {
                     selectedDocumentUri = data?.data // Here, remove the val keyword
Index: app/src/main/java/com/example/kleine/adapters/recyclerview/MaterialAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.adapters.recyclerview\n\nimport android.graphics.Color\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.navigation.findNavController\nimport androidx.recyclerview.widget.AsyncListDiffer\nimport androidx.recyclerview.widget.DiffUtil\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bumptech.glide.Glide\nimport com.example.kleine.R\nimport com.example.kleine.databinding.ProductLayoutRowBinding\nimport com.example.kleine.fragments.shopping.HomeFragmentDirections\nimport com.example.kleine.model.Material\nimport com.google.firebase.storage.FirebaseStorage\n\nclass MaterialAdapter : RecyclerView.Adapter<MaterialAdapter.MaterialViewHolder>() {\n\n    var onItemClick: ((Material) -> Unit)? = null\n\n    inner class MaterialViewHolder(val binding: ProductLayoutRowBinding) : RecyclerView.ViewHolder(binding.root) {\n\n    }\n\n    private val diffCallback = object : DiffUtil.ItemCallback<Material>() {\n        override fun areItemsTheSame(oldItem: Material, newItem: Material): Boolean {\n            return oldItem == newItem\n        }\n\n        override fun areContentsTheSame(oldItem: Material, newItem: Material): Boolean {\n            return oldItem == newItem\n        }\n    }\n\n    val differ = AsyncListDiffer(this, diffCallback)\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MaterialViewHolder {\n        Log.d(\"MaterialAdapter\", \"onCreateViewHolder called\")\n        return MaterialViewHolder(\n            ProductLayoutRowBinding.inflate(\n                LayoutInflater.from(parent.context),\n                parent,\n                false\n            )\n        )\n    }\n\n    // Define a helper function for debounced clicks\n    fun View.setDebouncedOnClickListener(debounceTime: Long = 500L, onClick: (view: View) -> Unit) {\n        var lastClickTime = 0L\n        this.setOnClickListener {\n            if (System.currentTimeMillis() - lastClickTime >= debounceTime) {\n                onClick(it)\n                lastClickTime = System.currentTimeMillis()\n            }\n        }\n    }\n\n    override fun onBindViewHolder(holder: MaterialViewHolder, position: Int) {\n        Log.d(\"MaterialAdapter\", \"onBindViewHolder called for position $position\")\n\n        val material = differ.currentList[position]\n        holder.binding.apply {\n            productModel = material\n\n            val storage = FirebaseStorage.getInstance()\n            val storageRef = storage.reference\n\n            // Set the color and clickability based on the status\n            if (material.status == \"Available\") {\n                cardView2.setCardBackgroundColor(Color.parseColor(\"#AAFF00\")) // Green color\n                cardView2.isClickable = true\n                cardView2.isFocusable = true\n                productCard.setCardBackgroundColor(Color.WHITE) // Set the main CardView to white\n\n            } else if (material.status == \"Non-available\") {\n                cardView2.setCardBackgroundColor(Color.parseColor(\"#FF0000\")) // Red color\n                cardView2.isClickable = false\n                cardView2.isFocusable = false\n                productCard.setCardBackgroundColor(Color.parseColor(\"#D3D3D3\")) // Set the main CardView to bright grey\n            }\n            if (material.imageUrl.isNotEmpty()) {\n                val pathReference = storage.getReferenceFromUrl(material.imageUrl)\n                pathReference.downloadUrl.addOnSuccessListener { uri ->\n                    Log.d(\"MaterialAdapter\", \"Successfully fetched URI: $uri\")\n                    Glide.with(holder.itemView).load(uri).into(imageView)\n                }.addOnFailureListener { exception ->\n                    Log.e(\"MaterialAdapter\", \"Failed to load image\", exception)\n                    imageView.setImageResource(R.drawable.default_book_logo)\n                }\n            } else {\n                imageView.setImageResource(R.drawable.default_book_logo)\n                Log.e(\"MaterialAdapter\", \"Failed to load image because of empty\")\n            }\n\n        }\n\n        // Set an onClick listener for the item\n        if (material.status == \"Available\") {\n            holder.itemView.setDebouncedOnClickListener {\n                Log.d(\"MaterialAdapter\", \"Navigating with Material ID: ${material.id}\")\n                val action = HomeFragmentDirections.actionHomeFragmentToMaterialDetailsFragment(material)\n                it.findNavController().navigate(action)\n            }\n        }\n\n    }\n\n    override fun getItemCount(): Int {\n        val count = differ.currentList.size\n        Log.d(\"MaterialAdapter\", \"Item count: $count\")\n        return count\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/adapters/recyclerview/MaterialAdapter.kt b/app/src/main/java/com/example/kleine/adapters/recyclerview/MaterialAdapter.kt
--- a/app/src/main/java/com/example/kleine/adapters/recyclerview/MaterialAdapter.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/adapters/recyclerview/MaterialAdapter.kt	(date 1696146330369)
@@ -14,6 +14,7 @@
 import com.example.kleine.databinding.ProductLayoutRowBinding
 import com.example.kleine.fragments.shopping.HomeFragmentDirections
 import com.example.kleine.model.Material
+import com.google.firebase.firestore.FirebaseFirestore
 import com.google.firebase.storage.FirebaseStorage
 
 class MaterialAdapter : RecyclerView.Adapter<MaterialAdapter.MaterialViewHolder>() {
@@ -100,12 +101,32 @@
         // Set an onClick listener for the item
         if (material.status == "Available") {
             holder.itemView.setDebouncedOnClickListener {
+                // Increment view count
+                incrementViewCount(material.id)
+
                 Log.d("MaterialAdapter", "Navigating with Material ID: ${material.id}")
                 val action = HomeFragmentDirections.actionHomeFragmentToMaterialDetailsFragment(material)
                 it.findNavController().navigate(action)
             }
         }
 
+
+    }
+
+
+    private fun incrementViewCount(materialId: String) {
+        val firestore = FirebaseFirestore.getInstance()
+        val materialRef = firestore.collection("Materials").document(materialId)
+
+        firestore.runTransaction { transaction ->
+            val snapshot = transaction.get(materialRef)
+            val newViewValue = snapshot.getLong("view")?.plus(1) ?: 1L
+            transaction.update(materialRef, "view", newViewValue)
+        }.addOnSuccessListener {
+            Log.d("MaterialAdapter", "Successfully incremented view count.")
+        }.addOnFailureListener { exception ->
+            Log.w("MaterialAdapter", "Error incrementing view count.", exception)
+        }
     }
 
     override fun getItemCount(): Int {
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39__Changes_.xml	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ /dev/null	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2023_9_24_13_39_[Changes]" date="1695534200647" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2023/9/24 13:39 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_9_24_13_39_[Changes]/shelved.patch	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ /dev/null	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
@@ -1,657 +0,0 @@
-Index: app/src/main/res/layout/fragment_result.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <data>\r\n        <!-- Declare variables or imports here if needed -->\r\n    </data>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/primary_color\" >\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Score : \"\r\n            android:textSize=\"35sp\"\r\n            android:textColor=\"@color/white\"\r\n            android:textStyle=\"bold\"\r\n            android:fontFamily=\"@font/chakrapetchbold\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.3\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btn_restart\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"30dp\"\r\n            android:layout_marginEnd=\"30dp\"\r\n            android:background=\"@drawable/background_btn\"\r\n            android:fontFamily=\"@font/chakrapetchbold\"\r\n            android:padding=\"8dp\"\r\n            android:text=\"Restart\"\r\n            android:textColor=\"@color/primary_color\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/textView\"\r\n            app:layout_constraintVertical_bias=\"0.37\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</layout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_result.xml b/app/src/main/res/layout/fragment_result.xml
---- a/app/src/main/res/layout/fragment_result.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/layout/fragment_result.xml	(date 1695485011383)
-@@ -28,6 +28,7 @@
-             app:layout_constraintVertical_bias="0.3" />
- 
-         <Button
-+            style="@style/Widget.Kleine.Button"
-             android:id="@+id/btn_restart"
-             android:layout_width="match_parent"
-             android:layout_height="wrap_content"
-Index: app/src/main/res/drawable/background_top.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <item>\r\n        <shape android:shape=\"rectangle\">\r\n            <solid android:color=\"@color/black\"></solid>\r\n            <corners\r\n                    android:bottomLeftRadius=\"60sp\"\r\n                    android:bottomRightRadius=\"60sp\"\r\n                />\r\n        </shape>\r\n\r\n    </item>\r\n</selector>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/background_top.xml b/app/src/main/res/drawable/background_top.xml
---- a/app/src/main/res/drawable/background_top.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/drawable/background_top.xml	(date 1695484850846)
-@@ -2,7 +2,7 @@
- <selector xmlns:android="http://schemas.android.com/apk/res/android">
-     <item>
-         <shape android:shape="rectangle">
--            <solid android:color="@color/black"></solid>
-+            <solid android:color="@color/primary_color"></solid>
-             <corners
-                     android:bottomLeftRadius="60sp"
-                     android:bottomRightRadius="60sp"
-Index: app/src/main/res/navigation/shopping_nav_graph.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/shopping_nav_graph\"\r\n    app:startDestination=\"@id/homeFragment\">\r\n\r\n    <fragment\r\n        android:id=\"@+id/homeFragment\"\r\n        android:name=\"com.example.kleine.fragments.shopping.HomeFragment\"\r\n        android:label=\"fragment_home\"\r\n        tools:layout=\"@layout/fragment_home\">\r\n        <action\r\n            android:id=\"@+id/action_homeFragment_to_searchFragment\"\r\n            app:destination=\"@id/searchFragment\"\r\n            app:popUpTo=\"@id/homeFragment\" />\r\n        <argument\r\n            android:name=\"position\"\r\n            app:argType=\"integer\"\r\n            android:defaultValue=\"0\" />\r\n    </fragment>\r\n\r\n    <action\r\n        android:id=\"@+id/action_homeFragment_to_materialDetailsFragment\"\r\n        app:destination=\"@id/materialDetailsFragment\"\r\n        app:enterAnim=\"@anim/nav_default_enter_anim\"\r\n        app:exitAnim=\"@anim/nav_default_exit_anim\"\r\n        app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\r\n        app:popExitAnim=\"@anim/nav_default_pop_exit_anim\"/>\r\n\r\n\r\n    <fragment\r\n        android:id=\"@+id/materialDetailsFragment\"\r\n        android:name=\"com.example.kleine.fragments.shopping.MaterialPreviewFragment\"\r\n        android:label=\"Material Details\">\r\n\r\n        <argument\r\n            android:name=\"material\"\r\n            app:argType=\"com.example.kleine.model.Material\"\r\n            android:defaultValue=\"@null\"\r\n            app:nullable=\"true\" />\r\n\r\n\r\n    </fragment>\r\n\r\n\r\n    <fragment\r\n        android:id=\"@+id/searchFragment\"\r\n        android:name=\"com.example.kleine.fragments.shopping.SearchFragment\"\r\n        android:label=\"fragment_search\"\r\n        tools:layout=\"@layout/fragment_search\">\r\n\r\n        <action\r\n            android:id=\"@+id/action_searchFragment_to_homeFragment\"\r\n            app:destination=\"@id/homeFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/profileFragment\"\r\n        android:name=\"com.example.kleine.fragments.shopping.ProfileFragment\"\r\n        android:label=\"fragment_profile\"\r\n        tools:layout=\"@layout/fragment_profile\">\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_billingFragment\"\r\n            app:destination=\"@id/billingFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_editUserInformation\"\r\n            app:destination=\"@id/editUserInformation\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_allOrdersFragment\"\r\n            app:destination=\"@id/allOrdersFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_languageFragment\"\r\n            app:destination=\"@id/languageFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_viewPartnershipFragment\"\r\n            app:destination=\"@id/viewPartnershipFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_helpFragment\"\r\n            app:destination=\"@id/helpFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_joinPartnerFragment\"\r\n            app:destination=\"@id/joinPartnerFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_adminDashboardFragment\"\r\n            app:destination=\"@id/adminDashboardFragment\"\r\n            app:enterAnim=\"@anim/nav_default_enter_anim\"\r\n            app:exitAnim=\"@anim/nav_default_exit_anim\"\r\n            app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\r\n            app:popExitAnim=\"@anim/nav_default_pop_exit_anim\"/>\r\n        <action\r\n            android:id=\"@+id/action_profileFragment_to_tempCommentFragment\"\r\n            app:destination=\"@id/tempCommentFragment\">\r\n            <argument\r\n                android:name=\"documentId\"\r\n                app:argType=\"string\"\r\n                app:nullable=\"false\" />\r\n        </action>\r\n\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/cartFragment\"\r\n        android:name=\"com.example.kleine.fragments.shopping.CartFragment\"\r\n        android:label=\"fragment_cart\"\r\n        tools:layout=\"@layout/fragment_cart\">\r\n\r\n        <action\r\n            android:id=\"@+id/action_cartFragment_to_billingFragment\"\r\n            app:destination=\"@id/billingFragment\" />\r\n    </fragment>\r\n\r\n    <fragment\r\n        android:id=\"@+id/billingFragment\"\r\n        android:name=\"com.example.kleine.fragments.shopping.BillingFragment\"\r\n        android:label=\"fragment_billing\"\r\n        tools:layout=\"@layout/fragment_billing\">\r\n        <action\r\n            android:id=\"@+id/action_billingFragment_to_addressFragment\"\r\n            app:destination=\"@id/addressFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\" />\r\n        <argument\r\n            android:name=\"clickFlag\"\r\n            app:argType=\"string\" />\r\n        <argument\r\n            android:name=\"price\"\r\n            android:defaultValue=\"null\"\r\n            app:argType=\"string\"\r\n            app:nullable=\"true\" />\r\n        <argument\r\n            android:name=\"products\"\r\n            android:defaultValue=\"@null\"\r\n            app:argType=\"com.example.kleine.model.CartProductsList\"\r\n            app:nullable=\"true\" />\r\n        <action\r\n            android:id=\"@+id/action_billingFragment_to_orderCompletion\"\r\n            app:destination=\"@id/orderCompletion\"\r\n            app:popUpTo=\"@id/billingFragment\"\r\n            app:popUpToInclusive=\"true\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/addressFragment\"\r\n        android:name=\"com.example.kleine.fragments.shopping.AddressFragment\"\r\n        android:label=\"fragment_address\"\r\n        tools:layout=\"@layout/fragment_address\">\r\n\r\n        <argument\r\n            android:name=\"address\"\r\n            android:defaultValue=\"@null\"\r\n            app:argType=\"com.example.kleine.model.Address\"\r\n            app:nullable=\"true\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/orderCompletion\"\r\n        android:name=\"com.example.kleine.fragments.shopping.OrderCompletion\"\r\n        android:label=\"fragment_order_completion\"\r\n        tools:layout=\"@layout/fragment_order_completion\">\r\n        <argument\r\n            android:name=\"order_completion_flag\"\r\n            app:argType=\"string\" />\r\n        <argument\r\n            android:name=\"orderNumber\"\r\n            android:defaultValue=\"null\"\r\n            app:argType=\"string\"\r\n            app:nullable=\"true\" />\r\n        <action\r\n            android:id=\"@+id/action_orderCompletion_to_orderDetails\"\r\n            app:destination=\"@id/orderDetails\" />\r\n        <argument\r\n            android:name=\"order\"\r\n            app:argType=\"com.example.kleine.model.Order\"\r\n            app:nullable=\"true\"\r\n            android:defaultValue=\"@null\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/editUserInformation\"\r\n        android:name=\"com.example.kleine.fragments.settings.EditUserInformationFragment\"\r\n        android:label=\"fragment_edit_user_information\"\r\n        tools:layout=\"@layout/fragment_edit_user_information\">\r\n        <argument\r\n            android:name=\"user\"\r\n            app:argType=\"com.example.kleine.model.User\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/allOrdersFragment\"\r\n        android:name=\"com.example.kleine.fragments.settings.AllOrdersFragment\"\r\n        android:label=\"fragment_all_orders\"\r\n        tools:layout=\"@layout/fragment_all_orders\" >\r\n        <action\r\n            android:id=\"@+id/action_allOrdersFragment_to_orderDetails\"\r\n            app:destination=\"@id/orderDetails\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/orderDetails\"\r\n        android:name=\"com.example.kleine.fragments.settings.OrderDetails\"\r\n        android:label=\"fragment_order_details\"\r\n        tools:layout=\"@layout/fragment_order_details\" >\r\n        <argument\r\n            android:name=\"order\"\r\n            app:argType=\"com.example.kleine.model.Order\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/languageFragment\"\r\n        android:name=\"com.example.kleine.fragments.settings.LanguageFragment\"\r\n        android:label=\"fragment_language\"\r\n        tools:layout=\"@layout/fragment_language\" />\r\n    <fragment\r\n        android:id=\"@+id/viewPartnershipFragment\"\r\n        android:name=\"com.example.kleine.fragments.partnership.ViewPartnershipFragment\"\r\n        android:label=\"fragment_view_partnership\"\r\n        tools:layout=\"@layout/fragment_view_partnership\">\r\n        <action\r\n            android:id=\"@+id/action_viewPartnershipFragment_to_partnershipViewMaterialFragment\"\r\n            app:destination=\"@id/partnershipViewMaterialFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n        <action\r\n            android:id=\"@+id/action_viewPartnershipFragment_to_updatePartnershipFragment\"\r\n            app:destination=\"@id/updatePartnershipFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\"/>\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/helpFragment\"\r\n        android:name=\"com.example.kleine.fragments.settings.HelpFragment\"\r\n        android:label=\"HelpFragment\"\r\n        tools:layout=\"@layout/fragment_help\"/>\r\n    <fragment\r\n        android:id=\"@+id/partnershipViewMaterialFragment\"\r\n        android:name=\"com.example.kleine.fragments.partnership.PartnershipViewMaterialFragment\"\r\n        android:label=\"fragment_partnership_view_material\"\r\n        tools:layout=\"@layout/fragment_partnership_view_material\" >\r\n        <action\r\n            android:id=\"@+id/action_partnershipViewMaterialFragment_to_partnershipViewMaterialDetailFragment\"\r\n            app:destination=\"@id/partnershipViewMaterialDetailFragment\"\r\n            app:enterAnim=\"@anim/from_right\"\r\n            app:exitAnim=\"@anim/to_left\"\r\n            app:popEnterAnim=\"@anim/from_left\"\r\n            app:popExitAnim=\"@anim/to_right\">\r\n            <argument\r\n                android:name=\"documentId\"\r\n                app:argType=\"string\"\r\n                app:nullable=\"false\" />\r\n        </action>\r\n        <action\r\n            android:id=\"@+id/action_partnershipViewMaterialFragment_to_setsFragment\"\r\n            app:destination=\"@id/setsFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/partnershipViewMaterialDetailFragment\"\r\n        android:name=\"com.example.kleine.fragments.partnership.PartnershipViewMaterialDetailFragment\"\r\n        android:label=\"fragment_partnership_view_material_detail\"\r\n        tools:layout=\"@layout/fragment_partnership_view_material_detail\" >\r\n        <action\r\n            android:id=\"@+id/action_partnershipViewMaterialDetailFragment_to_replyCommentFragment\"\r\n            app:destination=\"@id/replyCommentFragment\"\r\n            app:enterAnim=\"@anim/nav_default_enter_anim\"\r\n            app:exitAnim=\"@anim/nav_default_exit_anim\"\r\n            app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\r\n            app:popExitAnim=\"@anim/nav_default_pop_exit_anim\"/>\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/replyCommentFragment\"\r\n        android:name=\"com.example.kleine.fragments.partnership.ReplyCommentFragment\"\r\n        android:label=\"fragment_reply_comment\"\r\n        tools:layout=\"@layout/fragment_reply_comment\" />\r\n    <fragment\r\n        android:id=\"@+id/joinPartnerFragment\"\r\n        android:name=\"com.example.kleine.fragments.partnership.JoinPartnerFragment\"\r\n        android:label=\"fragment_join__partner_\"\r\n        tools:layout=\"@layout/fragment_join__partner_\" />\r\n    <fragment\r\n        android:id=\"@+id/adminDashboardFragment\"\r\n        android:name=\"com.example.kleine.fragments.admin.AdminDashboardFragment\"\r\n        android:label=\"fragment_admin_dashboard\"\r\n        tools:layout=\"@layout/fragment_admin_dashboard\" >\r\n        <action\r\n            android:id=\"@+id/action_adminDashboardFragment_to_adminViewPartnershipFragment\"\r\n            app:destination=\"@id/adminViewPartnershipFragment\"\r\n            app:enterAnim=\"@anim/nav_default_enter_anim\"\r\n            app:exitAnim=\"@anim/nav_default_exit_anim\"\r\n            app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\r\n            app:popExitAnim=\"@anim/nav_default_pop_exit_anim\"/>\r\n        <action\r\n            android:id=\"@+id/action_adminDashboardFragment_to_adminViewRewardFragment\"\r\n            app:destination=\"@id/adminViewRewardFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/adminViewPartnershipFragment\"\r\n        android:name=\"com.example.kleine.fragments.admin.AdminViewPartnershipFragment\"\r\n        android:label=\"fragment_admin_view_partnership\"\r\n        tools:layout=\"@layout/fragment_admin_view_partnership\" >\r\n        <action\r\n            android:id=\"@+id/action_adminViewPartnershipFragment_to_adminViewPartnershipRequestFragment\"\r\n            app:destination=\"@id/adminViewPartnershipRequestFragment\" />\r\n    </fragment>\r\n\r\n\r\n    <fragment\r\n        android:id=\"@+id/adminViewPartnershipRequestFragment\"\r\n        android:name=\"com.example.kleine.fragments.admin.AdminViewPartnershipRequestFragment\"\r\n        android:label=\"fragment_admin_view_partnership_request\"\r\n        tools:layout=\"@layout/fragment_admin_view_partnership_request\" />\r\n    <fragment\r\n        android:id=\"@+id/updatePartnershipFragment\"\r\n        android:name=\"com.example.kleine.fragments.partnership.UpdatePartnershipFragment\"\r\n        android:label=\"UpdatePartnershipFragment\"\r\n        tools:layout=\"@layout/fragment_update_partnership\"/>\r\n\r\n<!--    quiz-->\r\n    <fragment\r\n        android:id=\"@+id/setsFragment\"\r\n        android:name=\"com.example.kleine.fragments.quiz.SetsFragment\"\r\n        android:label=\"SetsFragment\"\r\n        tools:layout=\"@layout/fragment_sets\" >\r\n        <action\r\n            android:id=\"@+id/action_setsFragment_to_questionFragment\"\r\n            app:destination=\"@id/questionFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/questionFragment\"\r\n        android:name=\"com.example.kleine.fragments.quiz.QuestionFragment\"\r\n        android:label=\"QuestionFragment\"\r\n        tools:layout=\"@layout/fragment_question\" >\r\n        <action\r\n            android:id=\"@+id/action_questionFragment_to_addUpdateQuestionFragment\"\r\n            app:destination=\"@id/addUpdateQuestionFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/addUpdateQuestionFragment\"\r\n        android:name=\"com.example.kleine.fragments.quiz.AddUpdateQuestionFragment\"\r\n        android:label=\"AddUpdateQuestionFragment\"\r\n        tools:layout=\"@layout/fragment_add_update_question\" />\r\n    <fragment\r\n        android:id=\"@+id/quizFragment\"\r\n        android:name=\"com.example.kleine.fragments.quiz.QuizFragment\"\r\n        android:label=\"QuizFragment\"\r\n        tools:layout=\"@layout/fragment_quiz\" >\r\n        <action\r\n            android:id=\"@+id/action_quizFragment_to_playFragment\"\r\n            app:destination=\"@id/playFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/playFragment\"\r\n        android:name=\"com.example.kleine.fragments.quiz.PlayFragment\"\r\n        android:label=\"PlayFragment\"\r\n        tools:layout=\"@layout/fragment_play\" >\r\n        <action\r\n            android:id=\"@+id/action_playFragment_to_resultFragment\"\r\n            app:destination=\"@id/resultFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_playFragment_to_quizFragment\"\r\n            app:destination=\"@id/quizFragment\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/resultFragment\"\r\n        android:name=\"com.example.kleine.fragments.quiz.ResultFragment\"\r\n        android:label=\"ResultFragment\"\r\n        tools:layout=\"@layout/fragment_result\" >\r\n        <action\r\n            android:id=\"@+id/action_resultFragment_to_quizFragment\"\r\n            app:destination=\"@id/quizFragment\" />\r\n    </fragment>\r\n    <!--    end quiz-->\r\n\r\n<!--    reward-->\r\n    <fragment\r\n        android:id=\"@+id/adminViewRewardFragment\"\r\n        android:name=\"com.example.kleine.fragments.admin.AdminViewRewardFragment\"\r\n        android:label=\"AdminViewRewardFragment\"\r\n        tools:layout=\"@layout/fragment_admin_view_reward\">\r\n        <action\r\n            android:id=\"@+id/action_adminViewRewardFragment_to_adminAddRewardFragment\"\r\n            app:destination=\"@id/adminAddRewardFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_adminViewRewardFragment_to_adminUpdateRewardFragment\"\r\n            app:destination=\"@id/adminUpdateRewardFragment\" >\r\n            <argument\r\n            android:name=\"documentId\"\r\n            app:argType=\"string\" />\r\n        </action>\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/adminAddRewardFragment\"\r\n        android:name=\"com.example.kleine.fragments.admin.AdminAddRewardFragment\"\r\n        android:label=\"AdminAddRewardFragment\"\r\n        tools:layout=\"@layout/fragment_admin_add_reward\"/>\r\n    <fragment\r\n        android:id=\"@+id/adminUpdateRewardFragment\"\r\n        android:name=\"com.example.kleine.fragments.admin.AdminUpdateRewardFragment\"\r\n        android:label=\"AdminUpdateRewardFragment\"\r\n        tools:layout=\"@layout/fragment_admin_update_reward\"/>\r\n<!--    end reward-->\r\n    <fragment\r\n        android:id=\"@+id/tempCommentFragment\"\r\n        android:name=\"com.example.kleine.fragments.TempCommentFragment\"\r\n        android:label=\"fragment_temp_comment\"\r\n        tools:layout=\"@layout/fragment_temp_comment\"/>\r\n</navigation>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/navigation/shopping_nav_graph.xml b/app/src/main/res/navigation/shopping_nav_graph.xml
---- a/app/src/main/res/navigation/shopping_nav_graph.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/navigation/shopping_nav_graph.xml	(date 1695528043050)
-@@ -123,7 +123,14 @@
-                 app:argType="string"
-                 app:nullable="false" />
-         </action>
--
-+        <action
-+            android:id="@+id/action_profileFragment_to_quizFragment"
-+            app:destination="@id/quizFragment" >
-+            <argument
-+                android:name="materialDocId"
-+                app:argType="string"
-+                app:nullable="false" />
-+        </action>
-     </fragment>
-     <fragment
-         android:id="@+id/cartFragment"
-@@ -375,7 +382,19 @@
-         tools:layout="@layout/fragment_quiz" >
-         <action
-             android:id="@+id/action_quizFragment_to_playFragment"
--            app:destination="@id/playFragment" />
-+            app:destination="@id/playFragment" >
-+            <argument
-+                android:name="materialDocId"
-+                app:argType="string"
-+                app:nullable="false" />
-+            <argument
-+                android:name="randomSetId"
-+                app:argType="string"
-+                app:nullable="false" />
-+        </action>
-+        <action
-+            android:id="@+id/action_quizFragment_to_profileFragment"
-+            app:destination="@id/profileFragment" />
-     </fragment>
-     <fragment
-         android:id="@+id/playFragment"
-@@ -388,15 +407,26 @@
-         <action
-             android:id="@+id/action_playFragment_to_quizFragment"
-             app:destination="@id/quizFragment" />
-+        <argument
-+            android:name="materialDocId"
-+            app:argType="string"/>
-     </fragment>
-     <fragment
-         android:id="@+id/resultFragment"
-         android:name="com.example.kleine.fragments.quiz.ResultFragment"
-         android:label="ResultFragment"
-         tools:layout="@layout/fragment_result" >
-+        <action
-+            android:id="@+id/action_resultFragment_to_profileFragment"
-+            app:destination="@id/profileFragment" />
-         <action
-             android:id="@+id/action_resultFragment_to_quizFragment"
--            app:destination="@id/quizFragment" />
-+            app:destination="@id/quizFragment">
-+            <argument
-+                android:name="materialDocId"
-+                app:argType="string"
-+                app:nullable="true" />
-+        </action>
-     </fragment>
-     <!--    end quiz-->
- 
-Index: app/src/main/java/com/example/kleine/fragments/shopping/ProfileFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.kleine.fragments.shopping\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.coordinatorlayout.widget.CoordinatorLayout\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.bumptech.glide.Glide\r\nimport com.example.kleine.BuildConfig\r\nimport com.example.kleine.R\r\nimport com.example.kleine.activities.LunchActivity\r\nimport com.example.kleine.activities.ShoppingActivity\r\nimport com.example.kleine.databinding.FragmentProfileBinding\r\nimport com.example.kleine.model.User\r\nimport com.example.kleine.resource.Resource\r\nimport com.example.kleine.util.Constants.Companion.UPDATE_ADDRESS_FLAG\r\nimport com.example.kleine.viewmodel.shopping.ShoppingViewModel\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\n\r\n\r\nclass ProfileFragment : Fragment() {\r\n    val TAG = \"ProfileFragment\"\r\n    private lateinit var binding: FragmentProfileBinding\r\n    private lateinit var viewModel: ShoppingViewModel\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        viewModel = (activity as ShoppingActivity).viewModel\r\n        viewModel.getUser()\r\n    }\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        binding = FragmentProfileBinding.inflate(inflater, container, false)\r\n        val currentUser = FirebaseAuth.getInstance().currentUser\r\n\r\n        if (currentUser != null) {\r\n            val userId = currentUser.uid\r\n            val db = FirebaseFirestore.getInstance()\r\n            db.collection(\"users\").document(userId)\r\n                .get()\r\n                .addOnSuccessListener { document ->\r\n                    if (document != null) {\r\n                        val status = document.getString(\"status\")\r\n                        Log.d(TAG, \"User Status: $status\")\r\n                        if (status == \"ADMINS\") {\r\n                            // Admin user, show the fragment\r\n                            binding.adminOrders.visibility = View.VISIBLE\r\n                            binding.linearAdmin.visibility = View.VISIBLE\r\n                            binding.linearJoinPartnership.visibility = View.GONE\r\n                        }else if(status == \"PARTNERS\"){\r\n                            binding.adminOrders.visibility = View.GONE\r\n                            binding.linearAdmin.visibility = View.GONE\r\n                            binding.linearJoinPartnership.visibility = View.GONE\r\n                            binding.linearViewPartnership.visibility = View.VISIBLE\r\n                        }else{\r\n                            binding.linearJoinPartnership.visibility = View.VISIBLE\r\n                            binding.linearViewPartnership.visibility = View.GONE\r\n                            binding.adminOrders.visibility = View.GONE\r\n                            binding.linearAdmin.visibility = View.GONE\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        onHomeClick()\r\n        onLogoutClick()\r\n        onBillingAndAddressesClick()\r\n        onProfileClick()\r\n        onAllOrderClick()\r\n        onTrackOrderClick()\r\n        onJoinPartnershipCLick()\r\n        onViewPartnershipClick()\r\n        onAdminClick()\r\n        onHelpClick()\r\n\r\n        observeProfile()\r\n        binding.tvVersionCode.text =\r\n            \"${resources.getText(R.string.g_version)} ${BuildConfig.VERSION_NAME}\"\r\n\r\n\r\n        onTempCommentClick()\r\n    }\r\n\r\n    private fun onTempCommentClick() {\r\n        binding.linearComment.setOnClickListener {\r\n            val bundle = Bundle()\r\n            bundle.putString(\"documentId\", \"5VlLkBQaULeJlawqN8Rq\")\r\n            findNavController().navigate(R.id.action_profileFragment_to_tempCommentFragment, bundle)\r\n        }\r\n    }\r\n\r\n    private fun onHelpClick() {\r\n        binding.linearHelp.setOnClickListener {\r\n            findNavController().navigate(R.id.action_profileFragment_to_helpFragment)\r\n        }\r\n    }\r\n\r\n    private fun onAdminClick() {\r\n        binding.linearAdmin.setOnClickListener {\r\n            findNavController().navigate(R.id.action_profileFragment_to_adminDashboardFragment)\r\n        }\r\n    }\r\n\r\n\r\n    private fun onJoinPartnershipCLick() {\r\n        binding.linearJoinPartnership.setOnClickListener {\r\n            findNavController().navigate(R.id.action_profileFragment_to_joinPartnerFragment)\r\n        }\r\n    }\r\n    private fun onViewPartnershipClick() {\r\n        binding.linearViewPartnership.setOnClickListener {\r\n            findNavController().navigate(R.id.action_profileFragment_to_viewPartnershipFragment)\r\n        }\r\n    }\r\n\r\n    private fun onTrackOrderClick() {\r\n        binding.linearTrackOrder.setOnClickListener {\r\n            val snackBar = requireActivity().findViewById<CoordinatorLayout>(R.id.snackBar_coordinator)\r\n            Snackbar.make(snackBar,resources.getText(R.string.g_coming_soon),Snackbar.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    private fun onAllOrderClick() {\r\n        binding.allOrders.setOnClickListener {\r\n            findNavController().navigate(R.id.action_profileFragment_to_allOrdersFragment)\r\n        }\r\n    }\r\n\r\n    private fun onProfileClick() {\r\n        binding.constraintProfile.setOnClickListener {\r\n            user?.let {\r\n                val bundle = Bundle()\r\n                bundle.putParcelable(\"user\",user)\r\n                findNavController().navigate(R.id.action_profileFragment_to_editUserInformation,bundle)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    var user: User?=null\r\n    private fun observeProfile() {\r\n        viewModel.profile.observe(viewLifecycleOwner) { response ->\r\n            when (response) {\r\n                is Resource.Loading -> {\r\n                    showLoading()\r\n                    return@observe\r\n                }\r\n\r\n                is Resource.Success -> {\r\n                    hideLoading()\r\n                    val user = response.data\r\n                    this.user = user\r\n                    binding.apply {\r\n                        tvUserName.text = user?.firstName + \" \" + user?.lastName\r\n                        Glide.with(requireView()).load(user?.imagePath)\r\n                            .error(R.drawable.ic_default_profile_picture).into(binding.imgUser)\r\n                    }\r\n                    return@observe\r\n                }\r\n\r\n                is Resource.Error -> {\r\n                    hideLoading()\r\n                    Toast.makeText(\r\n                        activity,\r\n                        resources.getText(R.string.error_occurred),\r\n                        Toast.LENGTH_SHORT\r\n                    ).show()\r\n                    Log.e(TAG, response.message.toString())\r\n                    return@observe\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun hideLoading() {\r\n        binding.apply {\r\n            binding.progressbarSettings.visibility = View.GONE\r\n            constraintParnet.visibility = View.VISIBLE\r\n        }\r\n    }\r\n\r\n    private fun showLoading() {\r\n        binding.apply {\r\n            binding.progressbarSettings.visibility = View.VISIBLE\r\n            constraintParnet.visibility = View.INVISIBLE\r\n        }\r\n    }\r\n\r\n    private fun onBillingAndAddressesClick() {\r\n        binding.linearBilling.setOnClickListener {\r\n            val bundle = Bundle()\r\n            bundle.putString(\"clickFlag\", UPDATE_ADDRESS_FLAG)\r\n            findNavController().navigate(R.id.action_profileFragment_to_billingFragment, bundle)\r\n        }\r\n    }\r\n\r\n    private fun onLogoutClick() {\r\n\r\n        binding.linearOut.setOnClickListener {\r\n            FirebaseAuth.getInstance().signOut()\r\n            val intent = Intent(context, LunchActivity::class.java)\r\n            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK)\r\n            startActivity(intent)\r\n        }\r\n    }\r\n\r\n    private fun onHomeClick() {\r\n        val btm = activity?.findViewById<BottomNavigationView>(R.id.bottom_navigation)\r\n        btm?.menu?.getItem(0)?.setOnMenuItemClickListener {\r\n            activity?.onBackPressed()\r\n            true\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        val bottomNavigation = activity?.findViewById<BottomNavigationView>(R.id.bottom_navigation)\r\n        bottomNavigation?.visibility = View.VISIBLE\r\n    }\r\n\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/kleine/fragments/shopping/ProfileFragment.kt b/app/src/main/java/com/example/kleine/fragments/shopping/ProfileFragment.kt
---- a/app/src/main/java/com/example/kleine/fragments/shopping/ProfileFragment.kt	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/java/com/example/kleine/fragments/shopping/ProfileFragment.kt	(date 1695492076843)
-@@ -96,6 +96,7 @@
- 
- 
-         onTempCommentClick()
-+        onQuizClick()
-     }
- 
-     private fun onTempCommentClick() {
-@@ -106,6 +107,14 @@
-         }
-     }
- 
-+    private fun onQuizClick() {
-+        binding.linearQuiz.setOnClickListener {
-+            val bundle = Bundle()
-+            bundle.putString("materialDocId", "MYuSpYyoeoUmZPGMCH9w")
-+            findNavController().navigate(R.id.action_profileFragment_to_quizFragment, bundle)
-+        }
-+    }
-+
-     private fun onHelpClick() {
-         binding.linearHelp.setOnClickListener {
-             findNavController().navigate(R.id.action_profileFragment_to_helpFragment)
-Index: app/src/main/res/layout/fragment_quiz.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <data>\r\n        <!-- Declare variables or imports here if needed -->\r\n    </data>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/primary_color\" >\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"RANANGANAM\"\r\n            android:textSize=\"35sp\"\r\n            android:textColor=\"@color/white\"\r\n            android:textStyle=\"bold\"\r\n            android:fontFamily=\"@font/chakrapetchbold\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.25\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            android:layout_marginLeft=\"20sp\"\r\n            android:layout_marginRight=\"20sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/textView\">\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_play\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@drawable/background_btn\"\r\n                android:textStyle=\"bold\"\r\n                android:textColor=\"@color/primary_color\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:textSize=\"20sp\"\r\n                android:padding=\"8dp\"\r\n                android:onClick=\"main_btn\"\r\n                android:text=\"Play\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_setting\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"16dp\"\r\n                android:background=\"@drawable/background_btn\"\r\n                android:textStyle=\"bold\"\r\n                android:textColor=\"@color/primary_color\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:textSize=\"20sp\"\r\n                android:padding=\"8dp\"\r\n                android:onClick=\"main_btn\"\r\n                android:text=\"Setting\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_exit\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"16dp\"\r\n                android:background=\"@drawable/background_btn\"\r\n                android:textStyle=\"bold\"\r\n                android:textColor=\"@color/primary_color\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:textSize=\"20sp\"\r\n                android:onClick=\"main_btn\"\r\n                android:padding=\"8dp\"\r\n                android:text=\"Exit\" />\r\n        </LinearLayout>\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</layout>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_quiz.xml b/app/src/main/res/layout/fragment_quiz.xml
---- a/app/src/main/res/layout/fragment_quiz.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/layout/fragment_quiz.xml	(date 1695527462568)
-@@ -13,13 +13,14 @@
-         android:background="@color/primary_color" >
- 
-         <TextView
--            android:id="@+id/textView"
--            android:layout_width="wrap_content"
-+            android:id="@+id/material_name"
-+            android:layout_width="0dp"
-             android:layout_height="wrap_content"
--            android:text="RANANGANAM"
-+            android:text=""
-             android:textSize="35sp"
-             android:textColor="@color/white"
-             android:textStyle="bold"
-+            android:gravity="center_horizontal"
-             android:fontFamily="@font/chakrapetchbold"
-             app:layout_constraintBottom_toBottomOf="parent"
-             app:layout_constraintEnd_toEndOf="parent"
-@@ -36,9 +37,10 @@
-             app:layout_constraintStart_toStartOf="parent"
-             android:layout_marginLeft="20sp"
-             android:layout_marginRight="20sp"
--            app:layout_constraintTop_toBottomOf="@+id/textView">
-+            app:layout_constraintTop_toBottomOf="@+id/material_name">
- 
-             <Button
-+                style="@style/Widget.Kleine.Button"
-                 android:id="@+id/btn_play"
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
-@@ -52,20 +54,7 @@
-                 android:text="Play" />
- 
-             <Button
--                android:id="@+id/btn_setting"
--                android:layout_width="match_parent"
--                android:layout_height="wrap_content"
--                android:layout_marginTop="16dp"
--                android:background="@drawable/background_btn"
--                android:textStyle="bold"
--                android:textColor="@color/primary_color"
--                android:fontFamily="@font/chakrapetchbold"
--                android:textSize="20sp"
--                android:padding="8dp"
--                android:onClick="main_btn"
--                android:text="Setting" />
--
--            <Button
-+                style="@style/Widget.Kleine.Button"
-                 android:id="@+id/btn_exit"
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
-Index: app/src/main/res/layout/fragment_profile.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.core.widget.NestedScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:fillViewport=\"true\"\r\n    tools:context=\".fragments.shopping.ProfileFragment\"\r\n    android:background=\"#F4F4F4\">\r\n\r\n\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/progressbar_settings\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            android:indeterminateTint=\"@color/g_hint\"\r\n            android:visibility=\"gone\"/>\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:id=\"@+id/constraint_parnet\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            tools:layout_editor_absoluteX=\"16dp\"\r\n            tools:layout_editor_absoluteY=\"-378dp\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_settings\"\r\n                style=\"@style/BigTextViewThin\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:text=\"@string/g_settings\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/constraint_profile\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"8dp\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/guideline2\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/tv_settings\">\r\n\r\n                <de.hdodenhof.circleimageview.CircleImageView\r\n                    android:id=\"@+id/img_user\"\r\n                    android:layout_width=\"@dimen/_43sdp\"\r\n                    android:layout_height=\"@dimen/_43sdp\"\r\n                    android:background=\"@drawable/profile_img_background\"\r\n                    android:src=\"@drawable/test_image\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_user_name\"\r\n                    style=\"@style/MediumTextViewThin\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"10dp\"\r\n                    android:layout_marginTop=\"3dp\"\r\n                    android:text=\"Name\"\r\n                    app:layout_constraintStart_toEndOf=\"@id/img_user\"\r\n                    app:layout_constraintTop_toTopOf=\"@+id/img_user\" />\r\n\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tv_edit_personal_details\"\r\n                    style=\"@style/SmallTextViewThin\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"@string/g_edit_personal_details\"\r\n                    app:layout_constraintStart_toStartOf=\"@+id/tv_user_name\"\r\n                    app:layout_constraintTop_toBottomOf=\"@id/tv_user_name\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/arrow\"\r\n                    android:layout_width=\"@dimen/_15sdp\"\r\n                    android:layout_height=\"@dimen/_15sdp\"\r\n                    android:src=\"@drawable/ic_arrow\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@id/tv_edit_personal_details\"\r\n                    app:layout_constraintEnd_toEndOf=\"@id/constraint_profile\"\r\n                    app:layout_constraintTop_toTopOf=\"@id/tv_user_name\"\r\n                    app:tint=\"@color/g_icon_tint\" />\r\n\r\n\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/admin_orders\"\r\n                style=\"@style/MediumTextViewThin\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"@string/g_admin\"\r\n                android:textColor=\"@color/g_hint\"\r\n                android:textStyle=\"normal\"\r\n                android:visibility=\"gone\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/constraint_profile\" />\r\n\r\n            <LinearLayout\r\n                android:visibility=\"gone\"\r\n                android:id=\"@+id/linear_admin\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:background=\"@drawable/search_box_background\"\r\n                android:orientation=\"vertical\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/guideline2\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/admin_orders\">\r\n\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/linear_dashboard\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#ff5823\"\r\n                        android:src=\"@drawable/ic_logout\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/dashboard\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"Dashboard\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n\r\n            </LinearLayout>\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_orders\"\r\n                style=\"@style/MediumTextViewThin\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"@string/g_orders\"\r\n                android:textColor=\"@color/g_hint\"\r\n                android:textStyle=\"normal\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/linear_admin\" />\r\n\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/linear_orders\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:background=\"@drawable/search_box_background\"\r\n                android:orientation=\"vertical\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/guideline2\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/tv_orders\">\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/all_orders\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:src=\"@drawable/ic_all_orders\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_all_orders\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"@string/g_all_orders\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/linear_track_order\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"@color/g_hint\"\r\n                        android:src=\"@drawable/ic_search\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_track_order\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"@string/g__track_order\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/linear_billing\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#FF9800\"\r\n                        android:src=\"@drawable/ic_billing\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_billing\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"@string/g_billing\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/linear_comment\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#FF9800\"\r\n                        android:src=\"@drawable/ic_billing\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_billing1\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"temp comment\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n            </LinearLayout>\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_notifications\"\r\n                style=\"@style/MediumTextViewThin\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:text=\"@string/g_information\"\r\n                android:textColor=\"@color/g_hint\"\r\n                android:textStyle=\"normal\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/linear_orders\" />\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/linear_notifications\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:background=\"@drawable/search_box_background\"\r\n                android:orientation=\"vertical\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/guideline2\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/tv_notifications\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#4cd964\"\r\n                        android:src=\"@drawable/ic_notification\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_notifications2\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"@string/g_notifications\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <androidx.appcompat.widget.SwitchCompat\r\n                        android:id=\"@+id/switch_notification\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:buttonTint=\"#4cd964\"\r\n                        android:checked=\"true\" />\r\n\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/linear_help\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#9C27B0\"\r\n                        android:src=\"@drawable/ic_help\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_help\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"@string/help\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_regional\"\r\n                style=\"@style/MediumTextViewThin\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:text=\"@string/g_preference\"\r\n                android:textColor=\"@color/g_hint\"\r\n                android:textStyle=\"normal\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/linear_notifications\" />\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/linear_preference\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:background=\"@drawable/search_box_background\"\r\n                android:orientation=\"vertical\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/guideline2\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/tv_regional\">\r\n\r\n                <LinearLayout\r\n                    android:visibility=\"gone\"\r\n                    android:id=\"@+id/linear_join_partnership\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#5856d6\"\r\n                        android:src=\"@drawable/ic_partnership\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/dfgh\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"@string/g_join_partnership\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n\r\n                <LinearLayout\r\n                    android:visibility=\"gone\"\r\n                    android:id=\"@+id/linear_view_partnership\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#39388E\"\r\n                        android:src=\"@drawable/group\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/dfght\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"View Partnership\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/linear_out\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_30sdp\"\r\n                        android:layout_height=\"@dimen/_30sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:background=\"@drawable/settings_items_background\"\r\n                        android:backgroundTint=\"#ff5823\"\r\n                        android:src=\"@drawable/ic_logout\"\r\n                        app:tint=\"@color/white\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/logout\"\r\n                        style=\"@style/MediumTextViewThin\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginStart=\"@dimen/_15sdp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"@string/g_logout\"\r\n                        android:textColor=\"@color/g_hint\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"@dimen/_15sdp\"\r\n                        android:layout_height=\"@dimen/_15sdp\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:src=\"@drawable/ic_arrow\"\r\n                        app:tint=\"@color/g_icon_tint\" />\r\n                </LinearLayout>\r\n\r\n\r\n            </LinearLayout>\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_version_code\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginBottom=\"10dp\"\r\n                android:fontFamily=\"@font/sf_pro_display\"\r\n                android:text=\"Version 1.0\"\r\n                android:textColor=\"@color/g_hint\"\r\n                android:textSize=\"@dimen/_10ssp\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/guideline2\"\r\n                app:layout_constraintStart_toStartOf=\"@id/guideline1\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/linear_preference\" />\r\n\r\n\r\n            <androidx.constraintlayout.widget.Guideline\r\n                android:id=\"@+id/guideline1\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\"\r\n                app:layout_constraintGuide_percent=\"0.04\" />\r\n\r\n            <androidx.constraintlayout.widget.Guideline\r\n                android:id=\"@+id/guideline2\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\"\r\n                app:layout_constraintGuide_percent=\"0.96\" />\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n</androidx.core.widget.NestedScrollView>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_profile.xml b/app/src/main/res/layout/fragment_profile.xml
---- a/app/src/main/res/layout/fragment_profile.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/layout/fragment_profile.xml	(date 1695482968251)
-@@ -328,6 +328,42 @@
-                         app:tint="@color/g_icon_tint" />
-                 </LinearLayout>
- 
-+                <LinearLayout
-+                    android:id="@+id/linear_quiz"
-+                    android:layout_width="match_parent"
-+                    android:layout_height="wrap_content"
-+                    android:layout_marginTop="10dp"
-+                    android:orientation="horizontal">
-+
-+                    <ImageView
-+                        android:layout_width="@dimen/_30sdp"
-+                        android:layout_height="@dimen/_30sdp"
-+                        android:layout_gravity="center_vertical"
-+                        android:background="@drawable/settings_items_background"
-+                        android:backgroundTint="#FF9800"
-+                        android:src="@drawable/ic_billing"
-+                        app:tint="@color/white" />
-+
-+                    <TextView
-+                        android:id="@+id/quiz"
-+                        style="@style/MediumTextViewThin"
-+                        android:layout_width="0dp"
-+                        android:layout_height="wrap_content"
-+                        android:layout_gravity="center_vertical"
-+                        android:layout_marginStart="@dimen/_15sdp"
-+                        android:layout_weight="1"
-+                        android:text="QUIZ"
-+                        android:textColor="@color/g_hint"
-+                        android:textStyle="bold" />
-+
-+                    <ImageView
-+                        android:layout_width="@dimen/_15sdp"
-+                        android:layout_height="@dimen/_15sdp"
-+                        android:layout_gravity="center_vertical"
-+                        android:src="@drawable/ic_arrow"
-+                        app:tint="@color/g_icon_tint" />
-+                </LinearLayout>
-+
-             </LinearLayout>
- 
- 
-Index: app/src/main/java/com/example/kleine/fragments/quiz/QuizFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.kleine.fragments.quiz\r\n\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.findNavController\r\nimport com.example.kleine.R\r\nimport com.example.kleine.databinding.FragmentQuizBinding\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * A simple [Fragment] subclass.\r\n * Use the [QuizFragment.newInstance] factory method to\r\n * create an instance of this fragment.\r\n */\r\nclass QuizFragment : Fragment() {\r\n    private lateinit var binding: FragmentQuizBinding\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_quiz,container,false)\r\n        //The complete onClickListener with Navigation\r\n        binding.btnPlay.setOnClickListener { view : View ->\r\n            view.findNavController().navigate(R.id.action_quizFragment_to_playFragment)\r\n        }\r\n        return binding.root\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/kleine/fragments/quiz/QuizFragment.kt b/app/src/main/java/com/example/kleine/fragments/quiz/QuizFragment.kt
---- a/app/src/main/java/com/example/kleine/fragments/quiz/QuizFragment.kt	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/java/com/example/kleine/fragments/quiz/QuizFragment.kt	(date 1695528043033)
-@@ -5,10 +5,15 @@
- import android.view.LayoutInflater
- import android.view.View
- import android.view.ViewGroup
-+import android.widget.Toast
- import androidx.databinding.DataBindingUtil
-+import androidx.lifecycle.Observer
-+import androidx.lifecycle.ViewModelProvider
- import androidx.navigation.findNavController
-+import androidx.navigation.fragment.findNavController
- import com.example.kleine.R
- import com.example.kleine.databinding.FragmentQuizBinding
-+import com.example.kleine.viewmodel.quiz.QuizViewModel
- 
- // TODO: Rename parameter arguments, choose names that match
- // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-@@ -22,14 +27,49 @@
-  */
- class QuizFragment : Fragment() {
-     private lateinit var binding: FragmentQuizBinding
-+    private lateinit var viewModel: QuizViewModel
- 
-     override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
-         binding = DataBindingUtil.inflate(inflater, R.layout.fragment_quiz,container,false)
--        //The complete onClickListener with Navigation
--        binding.btnPlay.setOnClickListener { view : View ->
--            view.findNavController().navigate(R.id.action_quizFragment_to_playFragment)
-+        viewModel = ViewModelProvider(this).get(QuizViewModel::class.java)
-+        binding.lifecycleOwner = viewLifecycleOwner
-+
-+        val materialDocId: String? = arguments?.getString("materialDocId")
-+
-+        materialDocId?.let {
-+            viewModel.fetchAndDisplayMaterialName(it)
-+        }
-+
-+        // Observe changes in ViewModel
-+        viewModel.materialNameLiveData.observe(viewLifecycleOwner, Observer{ materialName ->
-+            binding.materialName.text = materialName
-+        })
-+
-+        viewModel.showToastLiveData.observe(viewLifecycleOwner, Observer{ message ->
-+            Toast.makeText(context, message, Toast.LENGTH_SHORT).show()
-+        })
-+
-+        viewModel.navigateToPlayFragmentLiveData.observe(viewLifecycleOwner, Observer { setId ->
-+            val materialId = materialDocId ?: return@Observer
-+            if (setId != null) {
-+                val action = QuizFragmentDirections.actionQuizFragmentToPlayFragment(materialId, setId)
-+                findNavController().navigate(action)
-+                // Resetting the LiveData value to null after navigation
-+                viewModel.navigateToPlayFragmentLiveData.value = null
-+            }
-+        })
-+
-+
-+        binding.btnPlay.setOnClickListener { view ->
-+            materialDocId?.let {
-+                viewModel.checkAvailableSetsAndNavigate(it, view)
-+            }
-         }
-+
-+        binding.btnExit.setOnClickListener {
-+            findNavController().navigate(R.id.action_quizFragment_to_profileFragment)
-+        }
-+
-         return binding.root
-     }
--
--}
-\ No newline at end of file
-+}
-Index: app/src/main/java/com/example/kleine/fragments/quiz/ResultFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.kleine.fragments.quiz\r\n\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.example.kleine.R\r\nimport com.example.kleine.databinding.FragmentResultBinding\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * A simple [Fragment] subclass.\r\n * Use the [ResultFragment.newInstance] factory method to\r\n * create an instance of this fragment.\r\n */\r\nclass ResultFragment : Fragment() {\r\n    private lateinit var binding: FragmentResultBinding\r\n\r\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\r\n        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_result, container,false)\r\n        // Read the score from the arguments and display it\r\n        val score = arguments?.getInt(\"Result\", 0) ?: 0\r\n        binding.textView.text = \"Score: $score\"\r\n\r\n        // Set up click listener for restart button\r\n        binding.btnRestart.setOnClickListener {\r\n            // Navigate back to MainActivity or the main fragment.\r\n            findNavController().navigate(R.id.action_resultFragment_to_quizFragment)\r\n        }\r\n        return binding.root\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/kleine/fragments/quiz/ResultFragment.kt b/app/src/main/java/com/example/kleine/fragments/quiz/ResultFragment.kt
---- a/app/src/main/java/com/example/kleine/fragments/quiz/ResultFragment.kt	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/java/com/example/kleine/fragments/quiz/ResultFragment.kt	(date 1695526957386)
-@@ -1,14 +1,17 @@
- package com.example.kleine.fragments.quiz
- 
-+import android.app.AlertDialog
- import android.os.Bundle
- import androidx.fragment.app.Fragment
- import android.view.LayoutInflater
- import android.view.View
- import android.view.ViewGroup
- import androidx.databinding.DataBindingUtil
-+import androidx.lifecycle.ViewModelProvider
- import androidx.navigation.fragment.findNavController
- import com.example.kleine.R
- import com.example.kleine.databinding.FragmentResultBinding
-+import com.example.kleine.viewmodel.quiz.ResultViewModel
- 
- // TODO: Rename parameter arguments, choose names that match
- // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-@@ -22,19 +25,47 @@
-  */
- class ResultFragment : Fragment() {
-     private lateinit var binding: FragmentResultBinding
-+    private lateinit var viewModel: ResultViewModel
- 
-     override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
-         binding = DataBindingUtil.inflate(inflater, R.layout.fragment_result, container,false)
--        // Read the score from the arguments and display it
-+        viewModel = ViewModelProvider(this).get(ResultViewModel::class.java)
-+        // This is used so that the binding can observe LiveData updates
-+        binding.lifecycleOwner = viewLifecycleOwner
-+
-+        val materialDocId = arguments?.getString("materialDocId")
-+
-         val score = arguments?.getInt("Result", 0) ?: 0
-+        val totalQuestions = arguments?.getInt("TotalQuestions", 1) ?: 1 // replace with actual total questions
-+        val percentageScored = (score.toFloat() / totalQuestions) * 100
-         binding.textView.text = "Score: $score"
- 
--        // Set up click listener for restart button
--        binding.btnRestart.setOnClickListener {
--            // Navigate back to MainActivity or the main fragment.
--            findNavController().navigate(R.id.action_resultFragment_to_quizFragment)
-+        if (percentageScored >= 80) {
-+            viewModel.updateUserPoints(5)
-+            showCongratsDialog()
-+            binding.btnRestart.text = "Go to Profile"
-+            binding.btnRestart.setOnClickListener {
-+                findNavController().navigate(R.id.action_resultFragment_to_profileFragment)
-+            }
-+        } else {
-+            binding.btnRestart.text = "Restart"
-+            binding.btnRestart.setOnClickListener {
-+                val action = ResultFragmentDirections.actionResultFragmentToQuizFragment(materialDocId)
-+                findNavController().navigate(action)
-+            }
-         }
-         return binding.root
-     }
- 
-+    private fun showCongratsDialog() {
-+        AlertDialog.Builder(requireContext())
-+            .setIcon(R.drawable.baseline_stars_24) // Set the image or icon
-+            .setTitle("Congratulations!") // Set the title
-+            .setMessage("You have earn 5 points! You can use the points to claim your rewards!") // Set the description
-+            .setPositiveButton("OK") { dialog, _ ->
-+                dialog.dismiss()
-+            }
-+            .show()
-+    }
-+
- }
-\ No newline at end of file
-Index: app/src/main/res/drawable/background_btn.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <item>\r\n        <shape>\r\n            <solid android:color=\"@color/black\"/>\r\n            <corners android:radius=\"25sp\"/>\r\n\r\n\r\n        </shape>\r\n    </item>\r\n</selector>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/background_btn.xml b/app/src/main/res/drawable/background_btn.xml
---- a/app/src/main/res/drawable/background_btn.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/drawable/background_btn.xml	(date 1695484502575)
-@@ -2,7 +2,7 @@
- <selector xmlns:android="http://schemas.android.com/apk/res/android">
-     <item>
-         <shape>
--            <solid android:color="@color/black"/>
-+            <solid android:color="@color/white"/>
-             <corners android:radius="25sp"/>
- 
- 
-Index: app/src/main/res/drawable/background_btn_choose.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <item>\r\n\r\n        <shape android:shape=\"rectangle\">\r\n\r\n            <stroke android:color=\"@color/black\"\r\n                    android:width=\"2dp\"\r\n                ></stroke>\r\n            <corners android:radius=\"5sp\"/>\r\n        </shape>\r\n\r\n    </item>\r\n</selector>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/background_btn_choose.xml b/app/src/main/res/drawable/background_btn_choose.xml
---- a/app/src/main/res/drawable/background_btn_choose.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/drawable/background_btn_choose.xml	(date 1695484838409)
-@@ -4,7 +4,7 @@
- 
-         <shape android:shape="rectangle">
- 
--            <stroke android:color="@color/black"
-+            <stroke android:color="#AFAFAF"
-                     android:width="2dp"
-                 ></stroke>
-             <corners android:radius="5sp"/>
-Index: app/src/main/java/com/example/kleine/fragments/quiz/PlayFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.kleine.fragments.quiz\r\n\r\nimport android.app.Dialog\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.WindowManager\r\nimport android.widget.Button\r\nimport android.widget.Toast\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.navigation.fragment.findNavController\r\nimport com.example.kleine.R\r\nimport com.example.kleine.databinding.FragmentPlayBinding\r\nimport com.example.kleine.viewmodel.quiz.PlayViewModel\r\n\r\nclass PlayFragment : Fragment() {\r\n\r\n    private lateinit var binding: FragmentPlayBinding\r\n    private lateinit var viewModel: PlayViewModel\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_play, container, false)\r\n\r\n        viewModel = ViewModelProvider(this).get(PlayViewModel::class.java)\r\n\r\n        // Set the viewModel for data binding - this allows the bound layout access\r\n        // to all the data in the VieWModel\r\n        binding.playViewModel = viewModel\r\n\r\n        // Specify the fragment view as the lifecycle owner of the binding.\r\n        // This is used so that the binding can observe LiveData updates\r\n        binding.lifecycleOwner = viewLifecycleOwner\r\n\r\n        binding.imageBack.setOnClickListener {\r\n            // handle back click\r\n            findNavController().navigateUp()\r\n        }\r\n\r\n        // Observe LiveData and set button backgrounds\r\n        viewModel.btnBackground.observe(viewLifecycleOwner, Observer { resId ->\r\n            binding.btnChoose1.setBackgroundResource(resId)\r\n            binding.btnChoose2.setBackgroundResource(resId)\r\n            binding.btnChoose3.setBackgroundResource(resId)\r\n            binding.btnChoose4.setBackgroundResource(resId)\r\n        })\r\n\r\n        viewModel.toastMessage.observe(viewLifecycleOwner, Observer { message ->\r\n            if (viewModel.showToastMsg.value!!) {\r\n                Toast.makeText(requireActivity(), message, Toast.LENGTH_SHORT).show()\r\n                viewModel.resetShowToastMsg()\r\n            }\r\n        })\r\n\r\n        viewModel.showDialogEvent.observe(viewLifecycleOwner, Observer { shouldShow  ->\r\n            if (shouldShow) {\r\n                val dialog = Dialog(requireActivity())\r\n                dialog.window?.addFlags(WindowManager.LayoutParams.FLAG_BLUR_BEHIND)\r\n                dialog.setCancelable(false)\r\n                dialog.setContentView(R.layout.timeout_dialog)\r\n\r\n                // Assuming that tryAgain is the ID of the button in your timeout_dialog layout\r\n                val tryAgainButton: Button = dialog.findViewById(R.id.tryAgain)\r\n                tryAgainButton.setOnClickListener {\r\n                    dialog.dismiss()\r\n                    // Assuming you're using Navigation component, use findNavController to navigate\r\n                    findNavController().popBackStack(R.id.quizFragment, false)\r\n                }\r\n\r\n                dialog.window?.setBackgroundDrawableResource(R.drawable.background_btn)\r\n                dialog.show()\r\n            }\r\n        })\r\n\r\n        viewModel.navigateToResult.observe(viewLifecycleOwner, Observer<Boolean> { shouldNavigate ->\r\n            if (shouldNavigate) {\r\n                // Create a Bundle and put the score inside\r\n                val bundle = Bundle().apply {\r\n                    putInt(\"Result\", viewModel.scorePlayer.value!!)\r\n                }\r\n                findNavController().navigate(R.id.action_playFragment_to_resultFragment, bundle)\r\n            }\r\n        })\r\n\r\n        return binding.root\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/kleine/fragments/quiz/PlayFragment.kt b/app/src/main/java/com/example/kleine/fragments/quiz/PlayFragment.kt
---- a/app/src/main/java/com/example/kleine/fragments/quiz/PlayFragment.kt	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/java/com/example/kleine/fragments/quiz/PlayFragment.kt	(date 1695526883730)
-@@ -16,19 +16,30 @@
- import com.example.kleine.R
- import com.example.kleine.databinding.FragmentPlayBinding
- import com.example.kleine.viewmodel.quiz.PlayViewModel
-+import com.example.kleine.viewmodel.quiz.PlayViewModelFactory
-+import androidx.activity.OnBackPressedCallback
-+
- 
- class PlayFragment : Fragment() {
- 
-     private lateinit var binding: FragmentPlayBinding
-     private lateinit var viewModel: PlayViewModel
- 
-+    private val backPressCallback = object : OnBackPressedCallback(true) {
-+        override fun handleOnBackPressed() {
-+            // Do nothing, thus disabling the back button
-+        }
-+    }
-+
-     override fun onCreateView(
-         inflater: LayoutInflater, container: ViewGroup?,
-         savedInstanceState: Bundle?
-     ): View {
-         binding = DataBindingUtil.inflate(inflater, R.layout.fragment_play, container, false)
- 
--        viewModel = ViewModelProvider(this).get(PlayViewModel::class.java)
-+        val materialID = arguments?.getString("materialDocId")
-+        val setID = arguments?.getString("randomSetId")
-+        viewModel = ViewModelProvider(this, PlayViewModelFactory(materialID, setID)).get(PlayViewModel::class.java)
- 
-         // Set the viewModel for data binding - this allows the bound layout access
-         // to all the data in the VieWModel
-@@ -38,10 +49,12 @@
-         // This is used so that the binding can observe LiveData updates
-         binding.lifecycleOwner = viewLifecycleOwner
- 
--        binding.imageBack.setOnClickListener {
--            // handle back click
--            findNavController().navigateUp()
--        }
-+//        binding.imageBack.setOnClickListener {
-+//            // handle back click
-+//            findNavController().navigateUp()
-+//        }
-+
-+        binding.imageBack.visibility = View.GONE
- 
-         // Observe LiveData and set button backgrounds
-         viewModel.btnBackground.observe(viewLifecycleOwner, Observer { resId ->
-@@ -83,12 +96,24 @@
-                 // Create a Bundle and put the score inside
-                 val bundle = Bundle().apply {
-                     putInt("Result", viewModel.scorePlayer.value!!)
-+                    putInt("TotalQuestions", viewModel.questionList.size)
-+                    putString("materialDocId", materialID)
-                 }
-                 findNavController().navigate(R.id.action_playFragment_to_resultFragment, bundle)
-             }
-         })
- 
-+        // Add OnBackPressedCallback
-+        requireActivity().onBackPressedDispatcher.addCallback(viewLifecycleOwner, backPressCallback)
-+
-         return binding.root
-     }
- 
-+    override fun onDestroyView() {
-+        // Disable the OnBackPressedCallback
-+        backPressCallback.isEnabled = false
-+        super.onDestroyView()
-+    }
-+
-+
- }
-Index: app/src/main/java/com/example/kleine/viewmodel/quiz/PlayViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.kleine.viewmodel.quiz\r\n\r\nimport android.os.CountDownTimer\r\nimport android.os.Handler\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport com.example.kleine.R\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\n\r\nclass PlayViewModel : ViewModel() {\r\n\r\n    private var questionList = mutableListOf<String>()\r\n    private var chooseList = mutableListOf<String>()\r\n    private var correctList = mutableListOf<String>()\r\n\r\n    private var currentQuestion = 0\r\n    private val _scorePlayer = MutableLiveData<Int>()\r\n    val scorePlayer: LiveData<Int>\r\n        get() = _scorePlayer\r\n    private var isClickBtn = false\r\n    private var valueChoose = \"\"\r\n    private lateinit var btnClick: Button\r\n\r\n    private val _questionText = MutableLiveData<String>()\r\n    val questionText: LiveData<String>\r\n        get() = _questionText\r\n\r\n    private val _btnChoice1Text = MutableLiveData<String>()\r\n    val btnChoice1Text: LiveData<String>\r\n        get() = _btnChoice1Text\r\n\r\n    private val _btnChoice2Text = MutableLiveData<String>()\r\n    val btnChoice2Text: LiveData<String>\r\n        get() = _btnChoice2Text\r\n\r\n    private val _btnChoice3Text = MutableLiveData<String>()\r\n    val btnChoice3Text: LiveData<String>\r\n        get() = _btnChoice3Text\r\n\r\n    private val _btnChoice4Text = MutableLiveData<String>()\r\n    val btnChoice4Text: LiveData<String>\r\n        get() = _btnChoice4Text\r\n\r\n    private val _cptQuestionText = MutableLiveData<String>()\r\n    val cptQuestionText: LiveData<String>\r\n        get() = _cptQuestionText\r\n\r\n    private val _btnBackground = MutableLiveData<Int>(R.drawable.background_btn_choose)\r\n    val btnBackground: LiveData<Int>\r\n        get() = _btnBackground\r\n\r\n    private val _navigateToResult = MutableLiveData<Boolean>()\r\n    val navigateToResult: LiveData<Boolean>\r\n        get() = _navigateToResult\r\n\r\n    private val _toastMessage = MutableLiveData<String>()\r\n    val toastMessage: LiveData<String>\r\n        get() = _toastMessage\r\n\r\n    private val _remainingTime = MutableLiveData<String>()\r\n    val remainingTime: LiveData<String>\r\n        get() = _remainingTime\r\n\r\n    private val _showDialogEvent = MutableLiveData<Boolean>()\r\n    val showDialogEvent: LiveData<Boolean>\r\n        get() = _showDialogEvent\r\n\r\n    private val _showToastMsg = MutableLiveData<Boolean>()\r\n    val showToastMsg: LiveData<Boolean>\r\n        get() = _showToastMsg\r\n\r\n    private lateinit var timer: CountDownTimer\r\n\r\n    private val db = FirebaseFirestore.getInstance()\r\n\r\n    init {\r\n        _scorePlayer.value = 0\r\n        fetchQuestions(\"MYuSpYyoeoUmZPGMCH9w\", \"I6lEledYlHpZD588NcZk\")\r\n    }\r\n\r\n    private fun fetchQuestions(materialID: String, setID: String) {\r\n        db.collection(\"Materials\")\r\n            .document(materialID)\r\n            .collection(\"Sets\")\r\n            .document(setID)\r\n            .collection(\"Questions\")\r\n            .get()\r\n            .addOnSuccessListener { querySnapshot ->\r\n                // Clear old data\r\n                questionList.clear()\r\n                chooseList.clear()\r\n                correctList.clear()\r\n\r\n                // Populate new data\r\n                for (document in querySnapshot.documents) {\r\n                    val questionText = document.getString(\"questionText\") ?: \"\"\r\n                    questionList.add(questionText)\r\n\r\n                    val optionA = document.getString(\"optionA\") ?: \"\"\r\n                    val optionB = document.getString(\"optionB\") ?: \"\"\r\n                    val optionC = document.getString(\"optionC\") ?: \"\"\r\n                    val optionD = document.getString(\"optionD\") ?: \"\"\r\n                    chooseList.addAll(listOf(optionA, optionB, optionC, optionD))\r\n\r\n                    val correctAnswerOption = document.getString(\"correctAnswer\") ?: \"\"\r\n                    // Get the actual correct answer based on the option label\r\n                    val correctAnswer = document.getString(correctAnswerOption) ?: \"\"\r\n                    correctList.add(correctAnswer)\r\n                }\r\n\r\n                // Check if data exists before proceeding\r\n                if (questionList.isNotEmpty() && chooseList.isNotEmpty() && correctList.isNotEmpty()) {\r\n                    fillData()\r\n                    startTimer()\r\n                }\r\n            }\r\n            .addOnFailureListener { exception ->\r\n                // Handle any errors here\r\n            }\r\n    }\r\n\r\n    private fun startTimer() {\r\n        timer = object : CountDownTimer(30000, 1000) {\r\n            override fun onTick(millisUntilFinished: Long) {\r\n                _remainingTime.value = (millisUntilFinished / 1000).toString()\r\n            }\r\n\r\n            override fun onFinish() {\r\n                // Handle time's up\r\n                _showDialogEvent.value = true\r\n            }\r\n        }.start()\r\n    }\r\n\r\n    // don't forget to cancel the timer when needed\r\n    override fun onCleared() {\r\n        super.onCleared()\r\n        timer.cancel()\r\n    }\r\n\r\n    fun nextQuestion() {\r\n        _showToastMsg.value = true\r\n\r\n        if (isClickBtn) {\r\n            isClickBtn = false\r\n            timer.cancel()\r\n\r\n            if (valueChoose != correctList[currentQuestion]) {\r\n                _toastMessage.value = \"error\"\r\n                btnClick.setBackgroundResource(R.drawable.background_btn_erreur)\r\n            } else {\r\n                _toastMessage.value = \"correct\"\r\n                btnClick.setBackgroundResource(R.drawable.background_btn_correct)\r\n                _scorePlayer.value = _scorePlayer.value?.plus(1)\r\n            }\r\n\r\n            Handler().postDelayed({\r\n                if (currentQuestion != questionList.size - 1) {\r\n                    currentQuestion++\r\n                    fillData()\r\n                    valueChoose = \"\"\r\n                    _btnBackground.value = R.drawable.background_btn_choose\r\n                    startTimer()\r\n                } else {\r\n                    // Navigate to ResultActivity using navigation component\r\n                    _navigateToResult.value = true\r\n                }\r\n            }, 2000)\r\n        } else {\r\n            _toastMessage.value = \"Vous devez en choisir un\"\r\n        }\r\n    }\r\n\r\n    private fun fillData() {\r\n        _cptQuestionText.value = \"${currentQuestion + 1}/${questionList.size}\"\r\n        _questionText.value = questionList[currentQuestion]\r\n\r\n        _btnChoice1Text.value = chooseList[4 * currentQuestion]\r\n        _btnChoice2Text.value = chooseList[4 * currentQuestion + 1]\r\n        _btnChoice3Text.value = chooseList[4 * currentQuestion + 2]\r\n        _btnChoice4Text.value = chooseList[4 * currentQuestion + 3]\r\n    }\r\n\r\n    fun clickChoose(view: View) {\r\n        btnClick = view as Button\r\n\r\n        if (isClickBtn) {\r\n            _btnBackground.value = R.drawable.background_btn_choose\r\n        }\r\n\r\n        chooseBtn()\r\n    }\r\n\r\n    private fun chooseBtn() {\r\n        btnClick.setBackgroundResource(R.drawable.background_btn_choose_color)\r\n        isClickBtn = true\r\n        valueChoose = btnClick.text.toString()\r\n    }\r\n\r\n    fun resetShowToastMsg() {\r\n        _showToastMsg.value = false\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/kleine/viewmodel/quiz/PlayViewModel.kt b/app/src/main/java/com/example/kleine/viewmodel/quiz/PlayViewModel.kt
---- a/app/src/main/java/com/example/kleine/viewmodel/quiz/PlayViewModel.kt	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/java/com/example/kleine/viewmodel/quiz/PlayViewModel.kt	(date 1695528043044)
-@@ -10,9 +10,9 @@
- import com.example.kleine.R
- import com.google.firebase.firestore.FirebaseFirestore
- 
--class PlayViewModel : ViewModel() {
-+class PlayViewModel(private val materialDocID: String?, private val setID: String?) : ViewModel() {
- 
--    private var questionList = mutableListOf<String>()
-+    var questionList = mutableListOf<String>()
-     private var chooseList = mutableListOf<String>()
-     private var correctList = mutableListOf<String>()
- 
-@@ -78,7 +78,10 @@
- 
-     init {
-         _scorePlayer.value = 0
--        fetchQuestions("MYuSpYyoeoUmZPGMCH9w", "I6lEledYlHpZD588NcZk")
-+        // Check if materialDocID and setID are not null before fetching questions
-+        if(materialDocID != null && setID != null) {
-+            fetchQuestions(materialDocID, setID)
-+        }
-     }
- 
-     private fun fetchQuestions(materialID: String, setID: String) {
-@@ -123,7 +126,7 @@
-     }
- 
-     private fun startTimer() {
--        timer = object : CountDownTimer(30000, 1000) {
-+        timer = object : CountDownTimer(10000, 1000) {
-             override fun onTick(millisUntilFinished: Long) {
-                 _remainingTime.value = (millisUntilFinished / 1000).toString()
-             }
-@@ -149,7 +152,7 @@
-             timer.cancel()
- 
-             if (valueChoose != correctList[currentQuestion]) {
--                _toastMessage.value = "error"
-+                _toastMessage.value = "wrong"
-                 btnClick.setBackgroundResource(R.drawable.background_btn_erreur)
-             } else {
-                 _toastMessage.value = "correct"
-@@ -170,7 +173,7 @@
-                 }
-             }, 2000)
-         } else {
--            _toastMessage.value = "Vous devez en choisir un"
-+            _toastMessage.value = "Please select your answer"
-         }
-     }
- 
-Index: app/src/main/res/layout/fragment_play.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <data>\r\n        <variable\r\n            name=\"playViewModel\"\r\n            type=\"com.example.kleine.viewmodel.quiz.PlayViewModel\" />\r\n    </data>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/white\" >\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:id=\"@+id/constraintLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0dp\"\r\n            android:background=\"@drawable/background_top\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHeight_percent=\"0.35\"\r\n            app:layout_constraintHorizontal_bias=\"0.0\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/imageView\"\r\n                android:layout_width=\"30dp\"\r\n                android:layout_height=\"30dp\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintVertical_bias=\"0.94\"\r\n                app:srcCompat=\"@drawable/clock\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/cpt_question\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"16dp\"\r\n                android:layout_marginEnd=\"16dp\"\r\n                android:text=\"@{playViewModel.cptQuestionText}\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"20sp\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintHorizontal_bias=\"1.0\"\r\n                app:layout_constraintStart_toEndOf=\"@+id/image_back\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/text_question\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"16dp\"\r\n                android:layout_marginEnd=\"16dp\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:text=\"@{playViewModel.questionText}\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"20sp\"\r\n                android:gravity=\"center\"\r\n                android:textStyle=\"bold\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/image_back\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"16dp\"\r\n                android:layout_marginTop=\"16dp\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:srcCompat=\"@drawable/ic_back\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/timer_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"8dp\"\r\n                android:text=\"@{playViewModel.remainingTime}\"\r\n                android:textColor=\"@color/white\"\r\n                android:textStyle=\"bold\"\r\n                app:layout_constraintBottom_toBottomOf=\"@+id/imageView\"\r\n                app:layout_constraintStart_toEndOf=\"@+id/imageView\"\r\n                app:layout_constraintTop_toTopOf=\"@+id/imageView\" />\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/btn_next\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Next\"\r\n            android:textColor=\"@color/white\"\r\n            android:fontFamily=\"@font/chakrapetchbold\"\r\n            android:textSize=\"20sp\"\r\n            android:padding=\"12sp\"\r\n            android:onClick=\"@{() -> playViewModel.nextQuestion()}\"\r\n            android:background=\"@color/primary_color\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/btn_next\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/constraintLayout\">\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_choose1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@drawable/background_btn_choose\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:onClick=\"@{(view) -> playViewModel.clickChoose(view)}\"\r\n                android:text=\"@{playViewModel.btnChoice1Text}\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_choose2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"12dp\"\r\n                android:background=\"@drawable/background_btn_choose\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:onClick=\"@{(view) -> playViewModel.clickChoose(view)}\"\r\n                android:text=\"@{playViewModel.btnChoice2Text}\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_choose3\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"12dp\"\r\n                android:background=\"@drawable/background_btn_choose\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:onClick=\"@{(view) -> playViewModel.clickChoose(view)}\"\r\n                android:text=\"@{playViewModel.btnChoice3Text}\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_choose4\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"12dp\"\r\n                android:background=\"@drawable/background_btn_choose\"\r\n                android:fontFamily=\"@font/chakrapetchbold\"\r\n                android:onClick=\"@{(view) -> playViewModel.clickChoose(view)}\"\r\n                android:text=\"@{playViewModel.btnChoice4Text}\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"16sp\" />\r\n        </LinearLayout>\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</layout>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_play.xml b/app/src/main/res/layout/fragment_play.xml
---- a/app/src/main/res/layout/fragment_play.xml	(revision c61773b51209c21dc6e07059e191e17480cada23)
-+++ b/app/src/main/res/layout/fragment_play.xml	(date 1695484845062)
-@@ -93,6 +93,7 @@
-         </androidx.constraintlayout.widget.ConstraintLayout>
- 
-         <Button
-+            style="@style/Widget.Kleine.Button"
-             android:id="@+id/btn_next"
-             android:layout_width="0dp"
-             android:layout_height="wrap_content"
-@@ -119,6 +120,7 @@
-             app:layout_constraintTop_toBottomOf="@+id/constraintLayout">
- 
-             <Button
-+                style="@style/Widget.Kleine.Button"
-                 android:id="@+id/btn_choose1"
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
-@@ -130,6 +132,7 @@
-                 android:textSize="16sp" />
- 
-             <Button
-+                style="@style/Widget.Kleine.Button"
-                 android:id="@+id/btn_choose2"
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
-@@ -142,6 +145,7 @@
-                 android:textSize="16sp" />
- 
-             <Button
-+                style="@style/Widget.Kleine.Button"
-                 android:id="@+id/btn_choose3"
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
-@@ -154,6 +158,7 @@
-                 android:textSize="16sp" />
- 
-             <Button
-+                style="@style/Widget.Kleine.Button"
-                 android:id="@+id/btn_choose4"
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
Index: app/src/main/java/com/example/kleine/fragments/applunch/LoginFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.fragments.applunch\n\nimport android.content.Intent\nimport android.os.Bundle\nimport android.util.Log\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Button\nimport android.widget.EditText\nimport android.widget.Toast\nimport androidx.lifecycle.Observer\nimport androidx.navigation.fragment.findNavController\nimport br.com.simplepass.loadingbutton.customViews.CircularProgressButton\nimport com.example.kleine.activities.LunchActivity\nimport com.example.kleine.R\nimport com.example.kleine.activities.ShoppingActivity\nimport com.example.kleine.databinding.FragmentLoginBinding\nimport com.example.kleine.resource.Resource\nimport com.example.kleine.viewmodel.lunchapp.KleineViewModel\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\nimport com.google.android.gms.common.api.ApiException\nimport com.google.android.material.bottomsheet.BottomSheetBehavior\nimport com.google.android.material.bottomsheet.BottomSheetDialog\nimport com.google.android.material.snackbar.Snackbar\n\n\nclass LoginFragment : Fragment() {\n    val TAG: String = \"LoginFragment\"\n    val GOOGLE_REQ_CODE = 13\n    private lateinit var binding: FragmentLoginBinding\n    private lateinit var btnLogin: CircularProgressButton\n    private lateinit var viewModel: KleineViewModel\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        viewModel = (activity as LunchActivity).viewModel\n\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        binding = FragmentLoginBinding.inflate(layoutInflater)\n        return binding.root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        btnLogin = view.findViewById(R.id.btn_login_fragment)\n\n        onLoginClick()\n        observerLogin()\n        observerLoginError()\n        onDontHaveAccountClick()\n        onForgotPasswordClick()\n        observeResetPassword()\n\n        observeSaveUserInformation()\n        binding.btnLoginFragment.apply {\n            btnLogin.spinningBarColor = resources.getColor(R.color.white)\n            btnLogin.spinningBarWidth = resources.getDimension(R.dimen._3sdp)\n        }\n    }\n\n\n\n    private fun observeResetPassword() {\n        viewModel.resetPassword.observe(viewLifecycleOwner, Observer { response ->\n            when (response) {\n                is Resource.Loading -> {\n\n                    return@Observer\n                }\n\n                is Resource.Success -> {\n                    showSnackBar()\n                    viewModel.resetPassword.postValue(null)\n                    return@Observer\n                }\n\n                is Resource.Error -> {\n                    Toast.makeText(\n                        activity,\n                        resources.getText(R.string.error_occurred),\n                        Toast.LENGTH_SHORT\n                    ).show()\n                    Log.e(TAG, response.message.toString())\n\n                    return@Observer\n                }\n            }\n        })\n    }\n\n    private fun showSnackBar() {\n        Snackbar.make(requireView(),resources.getText(R.string.g_password_reset),Snackbar.LENGTH_LONG).show()\n    }\n\n    private fun onForgotPasswordClick() {\n        binding.tvForgotPassword.setOnClickListener {\n            setupBottomSheetDialog()\n        }\n    }\n\n    private fun setupBottomSheetDialog() {\n        val dialog = BottomSheetDialog(requireContext(), R.style.DialogStyle)\n        val view = layoutInflater.inflate(R.layout.forgot_password_dialog, null)\n        dialog.setContentView(view)\n        dialog.behavior.state = BottomSheetBehavior.STATE_EXPANDED\n        dialog.show()\n\n        val edEmail = view.findViewById<EditText>(R.id.edEmail)\n        val btnSend = view.findViewById<Button>(R.id.btn_send)\n        val btnCancel = view.findViewById<Button>(R.id.btn_cancel)\n\n        btnSend.setOnClickListener {\n            val email = edEmail.text.toString().trim()\n            if (email.isNotEmpty() && android.util.Patterns.EMAIL_ADDRESS.matcher(email)\n                    .matches()\n            ) {\n                viewModel.resetPassword(email)\n                dialog.dismiss()\n            } else {\n                edEmail.requestFocus()\n                edEmail.error = resources.getText(R.string.g_check_your_email)\n            }\n        }\n\n        btnCancel.setOnClickListener {\n            dialog.dismiss()\n        }\n    }\n\n    private fun onDontHaveAccountClick() {\n        binding.tvDontHaveAnAccount.setOnClickListener {\n            findNavController().navigate(R.id.action_loginFragment_to_registerFragment)\n        }\n    }\n\n    private fun observerLoginError() {\n        viewModel.loginError.observe(viewLifecycleOwner, Observer { error ->\n            Log.e(TAG, error)\n            Toast.makeText(activity, \"Please check your information\", Toast.LENGTH_LONG).show()\n            btnLogin.revertAnimation()\n\n        })\n\n\n    }\n\n    private fun observerLogin() {\n        viewModel.login.observe(viewLifecycleOwner, Observer {\n            if (it == true) {\n                btnLogin.revertAnimation()\n                val intent = Intent(activity, ShoppingActivity::class.java)\n                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK)\n                startActivity(intent)\n            }\n        })\n    }\n\n    private fun onLoginClick() {\n        btnLogin.setOnClickListener {\n            btnLogin.spinningBarColor = resources.getColor(R.color.white)\n            btnLogin.spinningBarWidth = resources.getDimension(R.dimen._3sdp)\n\n            val email = getEmail()?.trim()\n            val password = getPassword()\n            email?.let {\n                password?.let {\n                    btnLogin.startAnimation()\n                    viewModel.loginUser(email, password)\n                }\n            }\n        }\n    }\n\n    private fun getPassword(): String? {\n        val password = binding.edPasswordLogin.text.toString()\n\n        if (password.isEmpty()) {\n            binding.edPasswordLogin.apply {\n                error = resources.getString(R.string.password_cant_be_empty)\n                requestFocus()\n            }\n            return null\n        }\n\n        if (password.length < 6) {\n            binding.edPasswordLogin.apply {\n                error = resources.getString(R.string.password_at_least_six)\n                requestFocus()\n            }\n            return null\n        }\n        return password\n    }\n\n    private fun getEmail(): String? {\n        val email = binding.edEmailLogin.text.toString().trim()\n\n        if (email.isEmpty()) {\n            binding.edEmailLogin.apply {\n                error = resources.getString(R.string.email_cant_be_empty)\n                requestFocus()\n            }\n            return null\n        }\n\n\n        if (!android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {\n            binding.edEmailLogin.apply {\n                error = resources.getString(R.string.valid_email)\n                requestFocus()\n            }\n            return null\n        }\n\n\n        return email\n\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n\n        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);\n        if (requestCode == GOOGLE_REQ_CODE) {\n            val task = GoogleSignIn.getSignedInAccountFromIntent(data)\n            try {\n                // Google Sign In was successful, authenticate with Firebase\n                val account = task.getResult(ApiException::class.java)!!\n                Log.d(\"test,\",account.email.toString())\n                Log.d(TAG, \"firebaseAuthWithGoogle:\" + account.id)\n                viewModel.signInWithGoogle(account.idToken!!)\n            } catch (e: ApiException) {\n                // Google Sign In failed, update UI appropriately\n                Log.e(TAG, \"Google sign in failed\", e)\n            }\n        }\n\n\n    }\n\n    private fun observeSaveUserInformation(){\n        viewModel.saveUserInformationGoogleSignIn.observe(viewLifecycleOwner, Observer { response->\n            when(response){\n                is Resource.Loading -> {\n                    Log.d(TAG,\"GoogleSignIn:Loading\")\n                    binding.btnLoginFragment.startAnimation()\n                    return@Observer\n                }\n\n                is Resource.Success -> {\n                    Log.d(TAG,\"GoogleSignIn:Successful\")\n                    binding.btnLoginFragment.stopAnimation()\n                    val intent = Intent(activity,ShoppingActivity::class.java)\n                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK)\n                    startActivity(intent)\n                    return@Observer\n                }\n\n                is Resource.Error ->{\n                    Log.e(TAG,\"GoogleSignIn:Error ${response.message.toString()}\")\n                    Toast.makeText(activity, resources.getText(R.string.error_occurred), Toast.LENGTH_LONG).show()\n                    return@Observer\n                }\n            }\n\n        })\n    }\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/fragments/applunch/LoginFragment.kt b/app/src/main/java/com/example/kleine/fragments/applunch/LoginFragment.kt
--- a/app/src/main/java/com/example/kleine/fragments/applunch/LoginFragment.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/fragments/applunch/LoginFragment.kt	(date 1696148248762)
@@ -16,6 +16,7 @@
 import com.example.kleine.activities.LunchActivity
 import com.example.kleine.R
 import com.example.kleine.activities.ShoppingActivity
+import com.example.kleine.database.SharedPreferencesHelper
 import com.example.kleine.databinding.FragmentLoginBinding
 import com.example.kleine.resource.Resource
 import com.example.kleine.viewmodel.lunchapp.KleineViewModel
@@ -25,6 +26,7 @@
 import com.google.android.material.bottomsheet.BottomSheetBehavior
 import com.google.android.material.bottomsheet.BottomSheetDialog
 import com.google.android.material.snackbar.Snackbar
+import com.google.firebase.auth.FirebaseAuth
 
 
 class LoginFragment : Fragment() {
@@ -33,6 +35,8 @@
     private lateinit var binding: FragmentLoginBinding
     private lateinit var btnLogin: CircularProgressButton
     private lateinit var viewModel: KleineViewModel
+    private lateinit var sharedPreferencesHelper: SharedPreferencesHelper
+
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -51,6 +55,7 @@
 
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
+        sharedPreferencesHelper = SharedPreferencesHelper(requireContext())
         btnLogin = view.findViewById(R.id.btn_login_fragment)
 
         onLoginClick()
@@ -156,6 +161,12 @@
     private fun observerLogin() {
         viewModel.login.observe(viewLifecycleOwner, Observer {
             if (it == true) {
+                // Get the user ID
+                val userId = FirebaseAuth.getInstance().currentUser?.uid
+                if (userId != null) {
+                    // Save user ID to SharedPreferences
+                    sharedPreferencesHelper.saveUserId(userId)
+                }
                 btnLogin.revertAnimation()
                 val intent = Intent(activity, ShoppingActivity::class.java)
                 intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK)
@@ -164,6 +175,8 @@
         })
     }
 
+
+
     private fun onLoginClick() {
         btnLogin.setOnClickListener {
             btnLogin.spinningBarColor = resources.getColor(R.color.white)
@@ -211,8 +224,6 @@
             }
             return null
         }
-
-
         if (!android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
             binding.edEmailLogin.apply {
                 error = resources.getString(R.string.valid_email)
Index: app/src/main/java/com/example/kleine/fragments/shopping/SearchFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.fragments.shopping\n\nimport android.content.Context\nimport android.os.Bundle\nimport android.util.Log\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.inputmethod.InputMethodManager\nimport androidx.coordinatorlayout.widget.CoordinatorLayout\nimport androidx.core.widget.addTextChangedListener\nimport androidx.fragment.app.Fragment\nimport androidx.lifecycle.Observer\nimport androidx.navigation.fragment.findNavController\nimport androidx.recyclerview.widget.GridLayoutManager\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.example.kleine.R\nimport com.example.kleine.SpacingDecorator.VerticalSpacingItemDecorator\nimport com.example.kleine.activities.ShoppingActivity\nimport com.example.kleine.adapters.recyclerview.CategoriesRecyclerAdapter\nimport com.example.kleine.adapters.recyclerview.SearchRecyclerAdapter\nimport com.example.kleine.databinding.FragmentSearchBinding\nimport com.example.kleine.resource.Resource\nimport com.example.kleine.viewmodel.shopping.ShoppingViewModel\nimport com.google.android.material.bottomnavigation.BottomNavigationView\nimport com.google.android.material.snackbar.Snackbar\nimport kotlinx.coroutines.*\n\nclass SearchFragment : Fragment() {\n    private val TAG = \"SearchFragment\"\n    private lateinit var binding: FragmentSearchBinding\n    private lateinit var inputMethodManger: InputMethodManager\n    private lateinit var viewModel: ShoppingViewModel\n    private lateinit var categoriesAdapter: CategoriesRecyclerAdapter\n    private lateinit var searchAdapter: SearchRecyclerAdapter\n\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        viewModel = (activity as ShoppingActivity).viewModel\n        viewModel.getCategories()\n\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        binding = FragmentSearchBinding.inflate(inflater)\n        return binding.root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n        setupSearchRecyclerView()\n        showKeyboardAutomatically()\n        onHomeClick()\n\n        searchMaterials()\n        observeSearchResults()\n\n\n        onSearchTextClick()\n\n        onCancelTvClick()\n\n\n        binding.frameScan.setOnClickListener {\n            val snackBar = requireActivity().findViewById<CoordinatorLayout>(R.id.snackBar_coordinator)\n            Snackbar.make(snackBar,resources.getText(R.string.g_coming_soon), Snackbar.LENGTH_SHORT).show()\n        }\n        binding.fragmeMicrohpone.setOnClickListener {\n            val snackBar = requireActivity().findViewById<CoordinatorLayout>(R.id.snackBar_coordinator)\n            Snackbar.make(snackBar,resources.getText(R.string.g_coming_soon), Snackbar.LENGTH_SHORT).show()\n        }\n\n    }\n\n\n\n    private fun onCancelTvClick() {\n        binding.tvCancel.setOnClickListener {\n            searchAdapter.differ.submitList(emptyList())\n            binding.edSearch.setText(\"\")\n            hideCancelTv()\n        }\n    }\n\n    private fun onSearchTextClick() {\n        searchAdapter.onItemClick = { material ->\n            val bundle = Bundle()\n            bundle.putParcelable(\"material\", material)\n\n            /**\n             * Hide the keyboard\n             */\n            val imm =\n                activity?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager?\n            imm!!.hideSoftInputFromWindow(requireView().windowToken, 0)\n\n            findNavController().navigate(\n                R.id.action_searchFragment_to_materialPreviewFragment,\n                bundle\n            )\n        }\n    }\n\n    private fun setupSearchRecyclerView() {\n        searchAdapter = SearchRecyclerAdapter()\n        binding.rvSearch.apply {\n            adapter = searchAdapter\n            layoutManager = LinearLayoutManager(context)\n        }\n    }\n\n\n\n\n\n\n\n    private fun showCancelTv() {\n        binding.tvCancel.visibility = View.VISIBLE\n        binding.imgMic.visibility = View.GONE\n        binding.imgScan.visibility = View.GONE\n        binding.fragmeMicrohpone.visibility = View.GONE\n        binding.frameScan.visibility = View.GONE\n    }\n\n\n    private fun observeSearchResults() {\n        viewModel.searchResults.observe(viewLifecycleOwner, Observer { response ->\n            when (response) {\n                is Resource.Loading -> {\n                    Log.d(TAG, \"Loading\")\n                }\n                is Resource.Success -> {\n                    val materials = response.data\n                    searchAdapter.differ.submitList(materials)\n                    showCancelTv()\n                }\n                is Resource.Error -> {\n                    Log.e(TAG, response.message.toString())\n                    showCancelTv()\n                }\n            }\n        })\n    }\n\n    var job: Job? = null\n    private fun searchMaterials() {\n        binding.edSearch.addTextChangedListener { query ->\n            val queryTrim = query.toString().trim()\n            if (queryTrim.isNotEmpty()) {\n                val searchQuery = queryTrim.capitalize()\n                job?.cancel()\n                job = CoroutineScope(Dispatchers.IO).launch {\n                    delay(500L)\n                    viewModel.searchMaterials(searchQuery)\n                }\n            } else {\n                searchAdapter.differ.submitList(emptyList())\n                hideCancelTv()\n            }\n        }\n    }\n\n\n    private fun showChancelTv() {\n        binding.tvCancel.visibility = View.VISIBLE\n        binding.imgMic.visibility = View.GONE\n        binding.imgScan.visibility = View.GONE\n        binding.fragmeMicrohpone.visibility = View.GONE\n        binding.frameScan.visibility = View.GONE\n\n    }\n\n    private fun hideCancelTv() {\n        binding.tvCancel.visibility = View.GONE\n        binding.imgMic.visibility = View.VISIBLE\n        binding.imgScan.visibility = View.VISIBLE\n        binding.fragmeMicrohpone.visibility = View.VISIBLE\n        binding.frameScan.visibility = View.VISIBLE\n    }\n\n    private fun onHomeClick() {\n        val btm = activity?.findViewById<BottomNavigationView>(R.id.bottom_navigation)\n        btm?.menu?.getItem(0)?.setOnMenuItemClickListener {\n            activity?.onBackPressed()\n            true\n        }\n    }\n\n    private fun showKeyboardAutomatically() {\n        inputMethodManger =\n            activity?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager\n        inputMethodManger.toggleSoftInput(\n            InputMethodManager.SHOW_FORCED,\n            InputMethodManager.HIDE_IMPLICIT_ONLY\n        )\n\n        binding.edSearch.requestFocus()\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        binding.edSearch.clearFocus()\n    }\n\n    override fun onResume() {\n        super.onResume()\n\n        val bottomNav = activity?.findViewById<BottomNavigationView>(R.id.bottom_navigation)\n        bottomNav?.visibility = View.VISIBLE\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/fragments/shopping/SearchFragment.kt b/app/src/main/java/com/example/kleine/fragments/shopping/SearchFragment.kt
--- a/app/src/main/java/com/example/kleine/fragments/shopping/SearchFragment.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/fragments/shopping/SearchFragment.kt	(date 1696144072006)
@@ -56,13 +56,9 @@
         setupSearchRecyclerView()
         showKeyboardAutomatically()
         onHomeClick()
-
         searchMaterials()
         observeSearchResults()
-
-
         onSearchTextClick()
-
         onCancelTvClick()
 
 
@@ -92,9 +88,6 @@
             val bundle = Bundle()
             bundle.putParcelable("material", material)
 
-            /**
-             * Hide the keyboard
-             */
             val imm =
                 activity?.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager?
             imm!!.hideSoftInputFromWindow(requireView().windowToken, 0)
@@ -114,12 +107,6 @@
         }
     }
 
-
-
-
-
-
-
     private fun showCancelTv() {
         binding.tvCancel.visibility = View.VISIBLE
         binding.imgMic.visibility = View.GONE
Index: app/src/main/java/com/example/kleine/viewmodel/shopping/ShoppingViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.viewmodel.shopping\n\nimport android.util.Log\nimport androidx.lifecycle.LiveData\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModel\nimport com.example.kleine.firebaseDatabase.FirebaseDb\nimport com.example.kleine.model.*\nimport com.example.kleine.resource.Resource\nimport com.example.kleine.util.Constants.Companion.ACCESSORY_CATEGORY\nimport com.example.kleine.util.Constants.Companion.CHAIR_CATEGORY\nimport com.example.kleine.util.Constants.Companion.CUPBOARD_CATEGORY\nimport com.example.kleine.util.Constants.Companion.FURNITURE_CATEGORY\nimport com.example.kleine.util.Constants.Companion.TABLES_CATEGORY\nimport com.google.firebase.firestore.FirebaseFirestore\nimport java.util.*\n\nprivate const val TAG = \"ShoppingViewModel\"\n\nclass ShoppingViewModel(\n    private val firebaseDatabase: FirebaseDb\n) : ViewModel() {\n\n\n    private val firestore: FirebaseFirestore = FirebaseFirestore.getInstance()\n    val materials: MutableLiveData<Resource<List<Material>>> = MutableLiveData()\n\n    private val _materialsLiveData = MutableLiveData<Resource<List<Material>>>()\n    val materialsLiveData: LiveData<Resource<List<Material>>> get() = _materialsLiveData\n\n    val searchResults = MutableLiveData<Resource<List<Material>>>()\n//    val materials = MutableLiveData<Resource<List<Material>>>()\n\n\n\n\n    val addAddress = MutableLiveData<Resource<Address>>()\n    val updateAddress = MutableLiveData<Resource<Address>>()\n    val deleteAddress = MutableLiveData<Resource<Address>>()\n\n    val profile = MutableLiveData<Resource<User>>()\n\n    val uploadProfileImage = MutableLiveData<Resource<String>>()\n    val updateUserInformation = MutableLiveData<Resource<User>>()\n    val passwordReset = MutableLiveData<Resource<String>>()\n    val categories = MutableLiveData<Resource<List<Category>>>()\n    val search = MutableLiveData<Resource<List<Product>>>()\n\n\n\n\n    // Fetch Materials from Firebase\n    fun getMaterials() {\n        _materialsLiveData.postValue(Resource.Loading())\n\n        firebaseDatabase.getMaterials(10)\n            .addOnSuccessListener { materials ->\n                // materials is already a List<Material>\n                _materialsLiveData.postValue(Resource.Success(materials))\n            }\n            .addOnFailureListener { exception ->\n                _materialsLiveData.postValue(Resource.Error(exception.message ?: \"An unknown error occurred\"))\n            }\n    }\n\n\n\n    private fun shouldPaging(category: String, listSize: Int, onSuccess: (Boolean) -> Unit) {\n        FirebaseFirestore.getInstance()\n            .collection(\"categories\")\n            .whereEqualTo(\"name\", category).get().addOnSuccessListener {\n                val tempCategory = it.toObjects(Category::class.java)\n                val products = tempCategory[0].products\n                Log.d(\"test\", \" $category : prodcuts ${tempCategory[0].products}, size $listSize\")\n                if (listSize == products)\n                    onSuccess(false).also { Log.d(TAG, \"$category Paging:false\") }\n                else\n                    onSuccess(true).also { Log.d(TAG, \"$category Paging:true\") }\n            }\n    }\n\n    private fun shouldPagingHome(listSize: Int, onSuccess: (Boolean) -> Unit) {\n        FirebaseFirestore.getInstance()\n            .collection(\"categories\").get().addOnSuccessListener {\n                var productsCount = 0\n                it.toObjects(Category::class.java).forEach { category ->\n                    productsCount += category.products!!.toInt()\n                }\n\n                if (listSize == productsCount)\n                    onSuccess(false)\n                else\n                    onSuccess(true)\n\n            }\n    }\n\n\n//    private fun checkIfProductAlreadyAdded(\n//        product: CartProduct,\n//        onSuccess: (Boolean, String) -> Unit\n//    ) {\n//        addToCart.postValue(Resource.Loading())\n//        firebaseDatabase.getProductInCart(product).addOnCompleteListener {\n//            if (it.isSuccessful) {\n//                val documents = it.result!!.documents\n//                if (documents.isNotEmpty())\n//                    onSuccess(true, documents[0].id) // true ---> product is already in cart\n//                else\n//                    onSuccess(false, \"\") // false ---> product is not in cart\n//            } else\n//                addToCart.postValue(Resource.Error(it.exception.toString()))\n//\n//        }\n//    }\n\n\n\n\n    fun saveAddress(address: Address) {\n        addAddress.postValue(Resource.Loading())\n        firebaseDatabase.saveNewAddress(address)?.addOnCompleteListener {\n            if (it.isSuccessful)\n                addAddress.postValue(Resource.Success(address))\n            else\n                addAddress.postValue(Resource.Error(it.exception.toString()))\n        }\n    }\n\n    fun updateAddress(oldAddress: Address, newAddress: Address) {\n        updateAddress.postValue(Resource.Loading())\n        firebaseDatabase.findAddress(oldAddress).addOnCompleteListener { addressResponse ->\n            if (addressResponse.isSuccessful) {\n                val documentUid = addressResponse.result!!.documents[0].id\n                firebaseDatabase.updateAddress(documentUid, newAddress)?.addOnCompleteListener {\n                    if (it.isSuccessful)\n                        updateAddress.postValue(Resource.Success(newAddress))\n                    else\n                        updateAddress.postValue(Resource.Error(it.exception.toString()))\n\n                }\n\n            } else\n                updateAddress.postValue(Resource.Error(addressResponse.exception.toString()))\n\n        }\n    }\n\n    fun deleteAddress(address: Address) {\n        deleteAddress.postValue(Resource.Loading())\n        firebaseDatabase.findAddress(address).addOnCompleteListener { addressResponse ->\n            if (addressResponse.isSuccessful) {\n                val documentUid = addressResponse.result!!.documents[0].id\n                firebaseDatabase.deleteAddress(documentUid, address)?.addOnCompleteListener {\n                    if (it.isSuccessful)\n                        deleteAddress.postValue(Resource.Success(address))\n                    else\n                        deleteAddress.postValue(Resource.Error(it.exception.toString()))\n\n                }\n\n            } else\n                deleteAddress.postValue(Resource.Error(addressResponse.exception.toString()))\n\n        }\n    }\n\n    private val user: User? = null\n    fun getUser() {\n        if (user != null) {\n            profile.postValue(Resource.Success(user))\n            return\n        }\n\n        profile.postValue(Resource.Loading())\n        firebaseDatabase.getUser().addSnapshotListener { value, error ->\n            if (error != null)\n                profile.postValue(Resource.Error(error.message))\n            else\n                profile.postValue(Resource.Success(value?.toObject(User::class.java)))\n\n        }\n    }\n\n    fun uploadProfileImage(image: ByteArray) {\n        Log.d(\"ViewModel\", \"Image byte array size: ${image.size}\")\n        uploadProfileImage.postValue(Resource.Loading())\n        val name = UUID.nameUUIDFromBytes(image).toString()\n        Log.d(\"ViewModel\", \"Generated UUID: $name\")\n\n        firebaseDatabase.uploadUserProfileImage(image, name).addOnCompleteListener {\n            if (it.isSuccessful) {\n                Log.d(\"ViewModel\", \"Upload successful with name: $name\")\n                uploadProfileImage.postValue(Resource.Success(name))\n            } else {\n                Log.e(\"ViewModel\", \"Upload failed: ${it.exception}\")\n                uploadProfileImage.postValue(Resource.Error(it.exception.toString()))\n            }\n        }\n    }\n\n\n    fun updateInformation(firstName: String, lastName: String, email: String, imageName: String) {\n        updateUserInformation.postValue(Resource.Loading())\n\n        firebaseDatabase.getImageUrl(firstName, lastName, email, imageName) { user, exception ->\n\n            if (exception != null)\n                updateUserInformation.postValue(Resource.Error(exception))\n                    .also { Log.d(\"test1\", \"up\") }\n            else\n                user?.let {\n                    onUpdateInformation(user).also { Log.d(\"test1\", \"down\") }\n                }\n        }\n    }\n\n    private fun onUpdateInformation(user: User) {\n        firebaseDatabase.updateUserInformation(user).addOnCompleteListener {\n            if (it.isSuccessful)\n                updateUserInformation.postValue(Resource.Success(user))\n            else\n                updateUserInformation.postValue(Resource.Error(it.exception.toString()))\n\n        }\n    }\n\n\n    fun resetPassword(email: String) {\n        passwordReset.postValue(Resource.Loading())\n        firebaseDatabase.resetPassword(email).addOnCompleteListener {\n            if (it.isSuccessful)\n                passwordReset.postValue(Resource.Success(email))\n            else\n                passwordReset.postValue(Resource.Error(it.exception.toString()))\n        }\n    }\n\n\n\n    fun searchMaterials(query: String) {\n        searchResults.postValue(Resource.Loading())\n\n        // Using the collection called \"Materials\" and assuming the field for the material name is \"name\"\n        val searchQuery = firestore.collection(\"Materials\")\n            .orderBy(\"name\")\n            .startAt(query)\n            .endAt(query + \"\\uf8ff\")\n\n        searchQuery.get().addOnSuccessListener { documents ->\n            val results = documents.map { document -> document.toObject(Material::class.java) }\n            searchResults.postValue(Resource.Success(results))\n        }.addOnFailureListener { exception ->\n            searchResults.postValue(Resource.Error(\"Error fetching data\"))\n            Log.e(TAG, \"Error getting documents: \", exception)\n        }\n    }\n\n\n    private var categoriesSafe: List<Category>? = null\n    fun getCategories() {\n        if(categoriesSafe != null){\n            categories.postValue(Resource.Success(categoriesSafe))\n            return\n        }\n        categories.postValue(Resource.Loading())\n        firebaseDatabase.getCategories().addOnCompleteListener {\n            if (it.isSuccessful) {\n                val categoriesList = it.result!!.toObjects(Category::class.java)\n                categoriesSafe = categoriesList\n                categories.postValue(Resource.Success(categoriesList))\n            } else\n                categories.postValue(Resource.Error(it.exception.toString()))\n        }\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/viewmodel/shopping/ShoppingViewModel.kt b/app/src/main/java/com/example/kleine/viewmodel/shopping/ShoppingViewModel.kt
--- a/app/src/main/java/com/example/kleine/viewmodel/shopping/ShoppingViewModel.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/viewmodel/shopping/ShoppingViewModel.kt	(date 1696144183566)
@@ -241,19 +241,19 @@
     fun searchMaterials(query: String) {
         searchResults.postValue(Resource.Loading())
 
-        // Using the collection called "Materials" and assuming the field for the material name is "name"
-        val searchQuery = firestore.collection("Materials")
-            .orderBy("name")
-            .startAt(query)
-            .endAt(query + "\uf8ff")
+        // Fetch all materials
+        firestore.collection("Materials")
+            .get().addOnSuccessListener { documents ->
+                val allMaterials = documents.map { document -> document.toObject(Material::class.java) }
 
-        searchQuery.get().addOnSuccessListener { documents ->
-            val results = documents.map { document -> document.toObject(Material::class.java) }
-            searchResults.postValue(Resource.Success(results))
-        }.addOnFailureListener { exception ->
-            searchResults.postValue(Resource.Error("Error fetching data"))
-            Log.e(TAG, "Error getting documents: ", exception)
-        }
+                // Filter materials based on the name containing the query
+                val results = allMaterials.filter { it.name.contains(query, ignoreCase = true) }
+
+                searchResults.postValue(Resource.Success(results))
+            }.addOnFailureListener { exception ->
+                searchResults.postValue(Resource.Error("Error fetching data"))
+                Log.e(TAG, "Error getting documents: ", exception)
+            }
     }
 
 
Index: app/src/main/java/com/example/kleine/database/SharedPreferencesHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/database/SharedPreferencesHelper.kt b/app/src/main/java/com/example/kleine/database/SharedPreferencesHelper.kt
new file mode 100644
--- /dev/null	(date 1696147689057)
+++ b/app/src/main/java/com/example/kleine/database/SharedPreferencesHelper.kt	(date 1696147689057)
@@ -0,0 +1,29 @@
+package com.example.kleine.database
+
+import android.content.Context
+import android.content.SharedPreferences
+import android.util.Log
+
+class SharedPreferencesHelper(context: Context) {
+
+    private val SHARED_PREF_NAME = "user_sharePre"
+    private val sharedPreferences: SharedPreferences = context.getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE)
+
+    fun saveUserId(userId: String) {
+        val editor = sharedPreferences.edit()
+        editor.putString("USER_ID", userId)
+        editor.apply()
+    }
+
+    fun getUserId(): String? {
+        return sharedPreferences.getString("USER_ID", null)
+    }
+
+    fun printSharedPreferences() {
+        val allEntries = sharedPreferences.all
+        for ((key, value) in allEntries) {
+            Log.d("SharedPreferencesData", "$key: $value")
+        }
+    }
+
+}
Index: app/src/main/java/com/example/kleine/fragments/shopping/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kleine.fragments.shopping\n\nimport android.os.Bundle\nimport android.util.Log\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.coordinatorlayout.widget.CoordinatorLayout\nimport androidx.navigation.fragment.findNavController\nimport androidx.navigation.fragment.navArgs\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.example.kleine.R\nimport com.example.kleine.activities.ShoppingActivity\nimport com.example.kleine.adapters.recyclerview.MaterialAdapter\nimport com.example.kleine.adapters.viewpager.HomeViewpagerAdapter\nimport com.example.kleine.databinding.FragmentHomeBinding\n\nimport com.example.kleine.viewmodel.shopping.ShoppingViewModel\nimport com.google.android.material.bottomnavigation.BottomNavigationView\nimport com.google.android.material.snackbar.Snackbar\nimport com.google.android.material.tabs.TabLayoutMediator\nimport com.google.firebase.firestore.QuerySnapshot\nimport com.example.kleine.model.Material\nimport com.example.kleine.resource.Resource\nimport com.google.firebase.auth.FirebaseAuth\nimport com.google.firebase.firestore.FirebaseFirestore\n\n\nclass HomeFragment : Fragment() {\n    val TAG = \"HomeFragment\"\n    private lateinit var viewModel: ShoppingViewModel\n    private lateinit var binding: FragmentHomeBinding\n    private lateinit var materialAdapter: MaterialAdapter\n\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        viewModel = (activity as ShoppingActivity).viewModel\n    }\n    \n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        binding = FragmentHomeBinding.inflate(layoutInflater, container, false)\n        return binding.root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n\n\n        val currentUser = FirebaseAuth.getInstance().currentUser\n\n        if (currentUser != null) {\n            val userId = currentUser.uid\n            val db = FirebaseFirestore.getInstance()\n            db.collection(\"users\").document(userId)\n                .get()\n                .addOnSuccessListener { document ->\n                    if (document != null) {\n                        val status = document.getString(\"status\")\n                        Log.d(TAG, \"User Status: $status\")\n                        if (status == \"ADMINS\") {\n                            // Admin user, show the fragment\n                            binding.frameAdd.visibility = View.GONE\n                        }else if(status == \"PARTNERS\"){\n                            binding.frameAdd.visibility = View.VISIBLE\n                        }else{\n\n                            binding.frameAdd.visibility = View.GONE\n                        }\n                    }\n                }\n            binding.frameAdd.setOnClickListener {\n                findNavController().navigate(R.id.action_homeFragment_to_addMaterialFragment)\n            }\n        }\n\n        binding.fragmeMicrohpone.setOnClickListener {\n            val snackBar = requireActivity().findViewById<CoordinatorLayout>(R.id.snackBar_coordinator)\n            Snackbar.make(snackBar,resources.getText(R.string.g_coming_soon),Snackbar.LENGTH_SHORT).show()\n        }\n\n        // Initialize RecyclerView and Adapter\n        materialAdapter = MaterialAdapter()  // No arguments here\n        binding.productListRecycler.adapter = materialAdapter\n        binding.productListRecycler.layoutManager = LinearLayoutManager(context)\n\n        // Fetch materials from ViewModel and observe LiveData\n        viewModel.getMaterials()  // This will update LiveData in ViewModel\n\n        viewModel.materialsLiveData.observe(viewLifecycleOwner) { resource ->\n            when (resource.status) {\n                Resource.Status.SUCCESS -> {\n                    Log.d(TAG, \"Fetched materials successfully. Item count: ${resource.data?.size}\")\n                    materialAdapter.differ.submitList(resource.data)\n                }\n\n                Resource.Status.ERROR -> {\n                    Log.e(TAG, \"Error fetching materials: ${resource.message}\")\n                }\n\n                Resource.Status.LOADING -> {\n                    Log.d(TAG, \"Loading materials\")\n                }\n            }\n        }\n        onItemClick()\n    }\n\n    private fun onItemClick() {\n        materialAdapter.onItemClick = { material ->\n            if (material != null) {\n                val bundle = Bundle()\n                bundle.putParcelable(\"material\", material)\n                findNavController().navigate(R.id.action_allOrdersFragment_to_materialDetailsFragment, bundle)\n            } else {\n                Log.e(TAG, \"Material object is null\")\n            }\n        }\n    }\n\n\n\n    override fun onResume() {\n        super.onResume()\n        val bottomNavigation =\n            requireActivity().findViewById<BottomNavigationView>(R.id.bottom_navigation)\n        bottomNavigation.visibility = View.VISIBLE\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kleine/fragments/shopping/HomeFragment.kt b/app/src/main/java/com/example/kleine/fragments/shopping/HomeFragment.kt
--- a/app/src/main/java/com/example/kleine/fragments/shopping/HomeFragment.kt	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/java/com/example/kleine/fragments/shopping/HomeFragment.kt	(date 1696148355679)
@@ -14,6 +14,7 @@
 import com.example.kleine.activities.ShoppingActivity
 import com.example.kleine.adapters.recyclerview.MaterialAdapter
 import com.example.kleine.adapters.viewpager.HomeViewpagerAdapter
+import com.example.kleine.database.SharedPreferencesHelper
 import com.example.kleine.databinding.FragmentHomeBinding
 
 import com.example.kleine.viewmodel.shopping.ShoppingViewModel
@@ -32,6 +33,8 @@
     private lateinit var viewModel: ShoppingViewModel
     private lateinit var binding: FragmentHomeBinding
     private lateinit var materialAdapter: MaterialAdapter
+    private val sharedPreferencesHelper by lazy { SharedPreferencesHelper(requireContext()) }
+
 
 
     override fun onCreate(savedInstanceState: Bundle?) {
@@ -52,7 +55,7 @@
     override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
         super.onViewCreated(view, savedInstanceState)
 
-
+        sharedPreferencesHelper.printSharedPreferences()
         val currentUser = FirebaseAuth.getInstance().currentUser
 
         if (currentUser != null) {
Index: app/src/main/res/navigation/shopping_nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/shopping_nav_graph\"\n    app:startDestination=\"@id/homeFragment\">\n\n    <fragment\n        android:id=\"@+id/addMaterialFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.AddMaterialFragment\"\n        android:label=\"Add Material\">\n    </fragment>\n\n\n\n    <fragment\n        android:id=\"@+id/homeFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.HomeFragment\"\n        android:label=\"fragment_home\"\n        tools:layout=\"@layout/fragment_home\">\n\n        <action\n            android:id=\"@+id/action_homeFragment_to_addMaterialFragment\"\n            app:destination=\"@id/addMaterialFragment\" />\n\n        <action\n            android:id=\"@+id/action_homeFragment_to_searchFragment\"\n            app:destination=\"@id/searchFragment\"\n            app:popUpTo=\"@id/homeFragment\" />\n        <argument\n            android:name=\"position\"\n            app:argType=\"integer\"\n            android:defaultValue=\"0\" />\n\n        <action\n            android:id=\"@+id/action_homeFragment_to_materialDetailsFragment\"\n            app:destination=\"@id/materialDetailsFragment\"\n            app:enterAnim=\"@anim/nav_default_enter_anim\"\n            app:exitAnim=\"@anim/nav_default_exit_anim\"\n            app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\n            app:popExitAnim=\"@anim/nav_default_pop_exit_anim\"/>\n    </fragment>\n\n\n    <fragment\n        android:id=\"@+id/materialDetailsFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.MaterialPreviewFragment\"\n        tools:layout=\"@layout/fragment_product_preview\">\n        <argument\n            android:name=\"material\"\n            app:argType=\"com.example.kleine.model.Material\"\n            app:nullable=\"true\" />\n    </fragment>\n\n\n    <fragment\n        android:id=\"@+id/searchFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.SearchFragment\"\n        android:label=\"fragment_search\"\n        tools:layout=\"@layout/fragment_search\">\n\n        <action\n            android:id=\"@+id/action_searchFragment_to_homeFragment\"\n            app:destination=\"@id/homeFragment\" />\n\n        <action\n            android:id=\"@+id/action_searchFragment_to_materialPreviewFragment\"\n            app:destination=\"@+id/materialDetailsFragment\" />\n\n    </fragment>\n    <fragment\n        android:id=\"@+id/profileFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.ProfileFragment\"\n        android:label=\"fragment_profile\"\n        tools:layout=\"@layout/fragment_profile\">\n\n\n        <action\n            android:id=\"@+id/action_profileFragment_to_billingFragment\"\n            app:destination=\"@id/billingFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_editUserInformation\"\n            app:destination=\"@id/editUserInformation\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_allOrdersFragment\"\n            app:destination=\"@id/allOrdersFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_languageFragment\"\n            app:destination=\"@id/languageFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_viewPartnershipFragment\"\n            app:destination=\"@id/viewPartnershipFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_helpFragment\"\n            app:destination=\"@id/helpFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_joinPartnerFragment\"\n            app:destination=\"@id/joinPartnerFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_adminDashboardFragment\"\n            app:destination=\"@id/adminDashboardFragment\"\n            app:enterAnim=\"@anim/nav_default_enter_anim\"\n            app:exitAnim=\"@anim/nav_default_exit_anim\"\n            app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\n            app:popExitAnim=\"@anim/nav_default_pop_exit_anim\"/>\n        <action\n            android:id=\"@+id/action_profileFragment_to_passedQuizzesFragment\"\n            app:destination=\"@id/passedQuizzesFragment\" />\n        <action\n            android:id=\"@+id/action_profileFragment_to_rewardFragment\"\n            app:destination=\"@id/rewardFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/cartFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.CartFragment\"\n        android:label=\"fragment_cart\"\n        tools:layout=\"@layout/fragment_cart\">\n\n        <action\n            android:id=\"@+id/action_cartFragment_to_billingFragment\"\n            app:destination=\"@id/billingFragment\" />\n    </fragment>\n\n    <fragment\n        android:id=\"@+id/billingFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.BillingFragment\"\n        android:label=\"fragment_billing\"\n        tools:layout=\"@layout/fragment_billing\">\n        <action\n            android:id=\"@+id/action_billingFragment_to_addressFragment\"\n            app:destination=\"@id/addressFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\" />\n        <argument\n            android:name=\"clickFlag\"\n            app:argType=\"string\" />\n        <argument\n            android:name=\"price\"\n            android:defaultValue=\"null\"\n            app:argType=\"string\"\n            app:nullable=\"true\" />\n        <argument\n            android:name=\"products\"\n            android:defaultValue=\"@null\"\n            app:argType=\"com.example.kleine.model.CartProductsList\"\n            app:nullable=\"true\" />\n        <action\n            android:id=\"@+id/action_billingFragment_to_orderCompletion\"\n            app:destination=\"@id/orderCompletion\"\n            app:popUpTo=\"@id/billingFragment\"\n            app:popUpToInclusive=\"true\" />\n        <action\n            android:id=\"@+id/action_billingFragment_to_rewardFragment\"\n            app:destination=\"@id/rewardFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/addressFragment\"\n        android:name=\"com.example.kleine.fragments.shopping.AddressFragment\"\n        android:label=\"fragment_address\"\n        tools:layout=\"@layout/fragment_address\">\n\n        <argument\n            android:name=\"address\"\n            android:defaultValue=\"@null\"\n            app:argType=\"com.example.kleine.model.Address\"\n            app:nullable=\"true\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/orderCompletion\"\n        android:name=\"com.example.kleine.fragments.shopping.OrderCompletion\"\n        android:label=\"fragment_order_completion\"\n        tools:layout=\"@layout/fragment_order_completion\">\n        <argument\n            android:name=\"order_completion_flag\"\n            app:argType=\"string\" />\n        <argument\n            android:name=\"orderNumber\"\n            android:defaultValue=\"null\"\n            app:argType=\"string\"\n            app:nullable=\"true\" />\n        <action\n            android:id=\"@+id/action_orderCompletion_to_orderDetails\"\n            app:destination=\"@id/orderDetails\" />\n        <argument\n            android:name=\"order\"\n            app:argType=\"com.example.kleine.model.Order\"\n            app:nullable=\"true\"\n            android:defaultValue=\"@null\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/editUserInformation\"\n        android:name=\"com.example.kleine.fragments.settings.EditUserInformationFragment\"\n        android:label=\"fragment_edit_user_information\"\n        tools:layout=\"@layout/fragment_edit_user_information\">\n        <argument\n            android:name=\"user\"\n            app:argType=\"com.example.kleine.model.User\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/allOrdersFragment\"\n        android:name=\"com.example.kleine.fragments.settings.AllOrdersFragment\"\n        android:label=\"fragment_all_orders\"\n        tools:layout=\"@layout/fragment_all_orders\" >\n\n        <action\n            android:id=\"@+id/action_allOrdersFragment_to_orderDetails\"\n            app:destination=\"@id/orderDetails\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\">\n            <argument\n                android:name=\"documentId\"\n                app:argType=\"string\"\n                app:nullable=\"false\" />\n        </action>\n\n        <action\n            android:id=\"@+id/action_allOrdersFragment_to_materialDetailsFragment\"\n            app:destination=\"@id/materialDetailsFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\" />\n\n\n\n\n    </fragment>\n    <fragment\n        android:id=\"@+id/orderDetails\"\n        android:name=\"com.example.kleine.fragments.settings.OrderDetails\"\n        android:label=\"fragment_order_details\"\n        tools:layout=\"@layout/fragment_order_details\" >\n\n        <argument\n            android:name=\"material\"\n            app:argType=\"com.example.kleine.model.Material\" />\n\n        <argument\n            android:name=\"courseDocument\"\n            app:argType=\"com.example.kleine.model.CourseDocument\" />\n        <action\n            android:id=\"@+id/action_orderDetails_to_quizFragment\"\n            app:destination=\"@id/quizFragment\" >\n            <argument\n                android:name=\"materialDocId\"\n                app:argType=\"string\" />\n        </action>\n\n    </fragment>\n    <fragment\n        android:id=\"@+id/languageFragment\"\n        android:name=\"com.example.kleine.fragments.settings.LanguageFragment\"\n        android:label=\"fragment_language\"\n        tools:layout=\"@layout/fragment_language\" />\n    <fragment\n        android:id=\"@+id/viewPartnershipFragment\"\n        android:name=\"com.example.kleine.fragments.partnership.ViewPartnershipFragment\"\n        android:label=\"fragment_view_partnership\"\n        tools:layout=\"@layout/fragment_view_partnership\">\n        <action\n            android:id=\"@+id/action_viewPartnershipFragment_to_partnershipViewMaterialFragment\"\n            app:destination=\"@id/partnershipViewMaterialFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n        <action\n            android:id=\"@+id/action_viewPartnershipFragment_to_updatePartnershipFragment\"\n            app:destination=\"@id/updatePartnershipFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\"/>\n    </fragment>\n    <fragment\n        android:id=\"@+id/helpFragment\"\n        android:name=\"com.example.kleine.fragments.settings.HelpFragment\"\n        android:label=\"HelpFragment\"\n        tools:layout=\"@layout/fragment_help\"/>\n    <fragment\n        android:id=\"@+id/partnershipViewMaterialFragment\"\n        android:name=\"com.example.kleine.fragments.partnership.PartnershipViewMaterialFragment\"\n        android:label=\"fragment_partnership_view_material\"\n        tools:layout=\"@layout/fragment_partnership_view_material\" >\n        <action\n            android:id=\"@+id/action_partnershipViewMaterialFragment_to_partnershipViewMaterialDetailFragment\"\n            app:destination=\"@id/partnershipViewMaterialDetailFragment\"\n            app:enterAnim=\"@anim/from_right\"\n            app:exitAnim=\"@anim/to_left\"\n            app:popEnterAnim=\"@anim/from_left\"\n            app:popExitAnim=\"@anim/to_right\">\n            <argument\n                android:name=\"documentId\"\n                app:argType=\"string\"\n                app:nullable=\"false\" />\n        </action>\n        <action\n            android:id=\"@+id/action_partnershipViewMaterialFragment_to_setsFragment\"\n            app:destination=\"@id/setsFragment\" />\n\n        <action\n            android:id=\"@+id/action_partnershipViewMaterialFragment_to_editMaterialFragment\"\n            app:destination=\"@id/editMaterialFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/partnershipViewMaterialDetailFragment\"\n        android:name=\"com.example.kleine.fragments.partnership.PartnershipViewMaterialDetailFragment\"\n        android:label=\"fragment_partnership_view_material_detail\"\n        tools:layout=\"@layout/fragment_partnership_view_material_detail\" >\n        <action\n            android:id=\"@+id/action_partnershipViewMaterialDetailFragment_to_replyCommentFragment\"\n            app:destination=\"@id/replyCommentFragment\"\n            app:enterAnim=\"@anim/nav_default_enter_anim\"\n            app:exitAnim=\"@anim/nav_default_exit_anim\"\n            app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\n            app:popExitAnim=\"@anim/nav_default_pop_exit_anim\">\n            <argument\n                android:name=\"documentId\"\n                app:argType=\"string\"\n                app:nullable=\"false\" />\n        </action>\n    </fragment>\n    <fragment\n        android:id=\"@+id/replyCommentFragment\"\n        android:name=\"com.example.kleine.fragments.partnership.ReplyCommentFragment\"\n        android:label=\"fragment_reply_comment\"\n        tools:layout=\"@layout/fragment_reply_comment\" />\n    <fragment\n        android:id=\"@+id/joinPartnerFragment\"\n        android:name=\"com.example.kleine.fragments.partnership.JoinPartnerFragment\"\n        android:label=\"fragment_join__partner_\"\n        tools:layout=\"@layout/fragment_join__partner_\" />\n    <fragment\n        android:id=\"@+id/adminDashboardFragment\"\n        android:name=\"com.example.kleine.fragments.admin.AdminDashboardFragment\"\n        android:label=\"fragment_admin_dashboard\"\n        tools:layout=\"@layout/fragment_admin_dashboard\" >\n        <action\n            android:id=\"@+id/action_adminDashboardFragment_to_adminViewPartnershipFragment\"\n            app:destination=\"@id/adminViewPartnershipFragment\"\n            app:enterAnim=\"@anim/nav_default_enter_anim\"\n            app:exitAnim=\"@anim/nav_default_exit_anim\"\n            app:popEnterAnim=\"@anim/nav_default_pop_enter_anim\"\n            app:popExitAnim=\"@anim/nav_default_pop_exit_anim\"/>\n        <action\n            android:id=\"@+id/action_adminDashboardFragment_to_adminViewRewardFragment\"\n            app:destination=\"@id/adminViewRewardFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/adminViewPartnershipFragment\"\n        android:name=\"com.example.kleine.fragments.admin.AdminViewPartnershipFragment\"\n        android:label=\"fragment_admin_view_partnership\"\n        tools:layout=\"@layout/fragment_admin_view_partnership\" >\n        <action\n            android:id=\"@+id/action_adminViewPartnershipFragment_to_adminViewPartnershipRequestFragment\"\n            app:destination=\"@id/adminViewPartnershipRequestFragment\" />\n    </fragment>\n\n\n    <fragment\n        android:id=\"@+id/adminViewPartnershipRequestFragment\"\n        android:name=\"com.example.kleine.fragments.admin.AdminViewPartnershipRequestFragment\"\n        android:label=\"fragment_admin_view_partnership_request\"\n        tools:layout=\"@layout/fragment_admin_view_partnership_request\" />\n    <fragment\n        android:id=\"@+id/updatePartnershipFragment\"\n        android:name=\"com.example.kleine.fragments.partnership.UpdatePartnershipFragment\"\n        android:label=\"UpdatePartnershipFragment\"\n        tools:layout=\"@layout/fragment_update_partnership\"/>\n\n<!--    quiz-->\n    <fragment\n        android:id=\"@+id/setsFragment\"\n        android:name=\"com.example.kleine.fragments.quiz.SetsFragment\"\n        android:label=\"SetsFragment\"\n        tools:layout=\"@layout/fragment_sets\" >\n        <action\n            android:id=\"@+id/action_setsFragment_to_questionFragment\"\n            app:destination=\"@id/questionFragment\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/questionFragment\"\n        android:name=\"com.example.kleine.fragments.quiz.QuestionFragment\"\n        android:label=\"QuestionFragment\"\n        tools:layout=\"@layout/fragment_question\" >\n        <action\n            android:id=\"@+id/action_questionFragment_to_addUpdateQuestionFragment\"\n            app:destination=\"@id/addUpdateQuestionFragment\" />\n    </fragment>\n\n    <fragment\n        android:id=\"@+id/editMaterialFragment\"\n        android:name=\"com.example.kleine.fragments.partnership.EditMaterialFragment\"\n        android:label=\"Edit Material\"\n        tools:layout=\"@layout/edit_material\">\n        <argument\n            android:name=\"materialId\"\n            app:argType=\"string\"\n            app:nullable=\"false\" />\n    </fragment>\n\n    <fragment\n        android:id=\"@+id/addUpdateQuestionFragment\"\n        android:name=\"com.example.kleine.fragments.quiz.AddUpdateQuestionFragment\"\n        android:label=\"AddUpdateQuestionFragment\"\n        tools:layout=\"@layout/fragment_add_update_question\" />\n    <fragment\n        android:id=\"@+id/quizFragment\"\n        android:name=\"com.example.kleine.fragments.quiz.QuizFragment\"\n        android:label=\"QuizFragment\"\n        tools:layout=\"@layout/fragment_quiz\" >\n        <action\n            android:id=\"@+id/action_quizFragment_to_playFragment\"\n            app:destination=\"@id/playFragment\" >\n            <argument\n                android:name=\"materialDocId\"\n                app:argType=\"string\"\n                app:nullable=\"false\" />\n            <argument\n                android:name=\"randomSetId\"\n                app:argType=\"string\"\n                app:nullable=\"false\" />\n        </action>\n        <action\n            android:id=\"@+id/action_quizFragment_to_orderDetails\"\n            app:destination=\"@id/orderDetails\" />\n    </fragment>\n    <fragment\n        android:id=\"@+id/playFragment\"\n        android:name=\"com.example.kleine.fragments.quiz.PlayFragment\"\n        android:label=\"PlayFragment\"\n        tools:layout=\"@layout/fragment_play\" >\n        <action\n            android:id=\"@+id/action_playFragment_to_resultFragment\"\n            app:destination=\"@id/resultFragment\" />\n        <action\n            android:id=\"@+id/action_playFragment_to_quizFragment\"\n            app:destination=\"@id/quizFragment\" />\n        <argument\n            android:name=\"materialDocId\"\n            app:argType=\"string\"/>\n    </fragment>\n    <fragment\n        android:id=\"@+id/resultFragment\"\n        android:name=\"com.example.kleine.fragments.quiz.ResultFragment\"\n        android:label=\"ResultFragment\"\n        tools:layout=\"@layout/fragment_result\" >\n        <action\n            android:id=\"@+id/action_resultFragment_to_quizFragment\"\n            app:destination=\"@id/quizFragment\">\n            <argument\n                android:name=\"materialDocId\"\n                app:argType=\"string\"\n                app:nullable=\"true\" />\n        </action>\n        <action\n            android:id=\"@+id/action_resultFragment_to_orderDetails\"\n            app:destination=\"@id/orderDetails\" />\n    </fragment>\n\n\n    <fragment\n        android:id=\"@+id/passedQuizzesFragment\"\n        android:name=\"com.example.kleine.fragments.quiz.PassedQuizzesFragment\"\n        android:label=\"PassedQuizzesFragment\"\n        tools:layout=\"@layout/fragment_passed_quizzes\" />\n    <!--    end quiz-->\n\n<!--    reward-->\n    <fragment\n        android:id=\"@+id/adminViewRewardFragment\"\n        android:name=\"com.example.kleine.fragments.admin.AdminViewRewardFragment\"\n        android:label=\"AdminViewRewardFragment\"\n        tools:layout=\"@layout/fragment_admin_view_reward\">\n        <action\n            android:id=\"@+id/action_adminViewRewardFragment_to_adminAddRewardFragment\"\n            app:destination=\"@id/adminAddRewardFragment\" />\n        <action\n            android:id=\"@+id/action_adminViewRewardFragment_to_adminUpdateRewardFragment\"\n            app:destination=\"@id/adminUpdateRewardFragment\" >\n            <argument\n            android:name=\"rewardName\"\n            app:argType=\"string\" />\n        </action>\n    </fragment>\n    <fragment\n        android:id=\"@+id/adminAddRewardFragment\"\n        android:name=\"com.example.kleine.fragments.admin.AdminAddRewardFragment\"\n        android:label=\"AdminAddRewardFragment\"\n        tools:layout=\"@layout/fragment_admin_add_reward\"/>\n    <fragment\n        android:id=\"@+id/adminUpdateRewardFragment\"\n        android:name=\"com.example.kleine.fragments.admin.AdminUpdateRewardFragment\"\n        android:label=\"AdminUpdateRewardFragment\"\n        tools:layout=\"@layout/fragment_admin_update_reward\"/>\n    <fragment\n        android:id=\"@+id/rewardFragment\"\n        android:name=\"com.example.kleine.fragments.reward.RewardFragment\"\n        android:label=\"RewardFragment\"\n        tools:layout=\"@layout/fragment_reward\">\n        <action\n            android:id=\"@+id/action_rewardFragment_to_billingFragment\"\n            app:destination=\"@id/billingFragment\" />\n    </fragment>\n<!--    end reward-->\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/shopping_nav_graph.xml b/app/src/main/res/navigation/shopping_nav_graph.xml
--- a/app/src/main/res/navigation/shopping_nav_graph.xml	(revision 17b65cb6656cd0743db7d4aeda804d05c371b063)
+++ b/app/src/main/res/navigation/shopping_nav_graph.xml	(date 1696145696874)
@@ -46,6 +46,11 @@
         android:id="@+id/materialDetailsFragment"
         android:name="com.example.kleine.fragments.shopping.MaterialPreviewFragment"
         tools:layout="@layout/fragment_product_preview">
+
+        <action
+            android:id="@+id/action_materialDetailsFragment_to_homeFragment"
+            app:destination="@id/homeFragment" />
+
         <argument
             android:name="material"
             app:argType="com.example.kleine.model.Material"
