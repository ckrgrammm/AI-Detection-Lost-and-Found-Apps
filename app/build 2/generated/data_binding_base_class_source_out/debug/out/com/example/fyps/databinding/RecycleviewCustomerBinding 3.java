// Generated by view binder compiler. Do not edit!
package com.example.fyps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecycleviewCustomerBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView custDetailBtn;

  @NonNull
  public final ImageView customerImage;

  @NonNull
  public final CardView customerLayout;

  @NonNull
  public final TextView tvCustomerEmail;

  @NonNull
  public final TextView tvCustomerName;

  private RecycleviewCustomerBinding(@NonNull CardView rootView, @NonNull ImageView custDetailBtn,
      @NonNull ImageView customerImage, @NonNull CardView customerLayout,
      @NonNull TextView tvCustomerEmail, @NonNull TextView tvCustomerName) {
    this.rootView = rootView;
    this.custDetailBtn = custDetailBtn;
    this.customerImage = customerImage;
    this.customerLayout = customerLayout;
    this.tvCustomerEmail = tvCustomerEmail;
    this.tvCustomerName = tvCustomerName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecycleviewCustomerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecycleviewCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycleview_customer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecycleviewCustomerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cust_detail_btn;
      ImageView custDetailBtn = ViewBindings.findChildViewById(rootView, id);
      if (custDetailBtn == null) {
        break missingId;
      }

      id = R.id.customer_image;
      ImageView customerImage = ViewBindings.findChildViewById(rootView, id);
      if (customerImage == null) {
        break missingId;
      }

      CardView customerLayout = (CardView) rootView;

      id = R.id.tv_customerEmail;
      TextView tvCustomerEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvCustomerEmail == null) {
        break missingId;
      }

      id = R.id.tv_customerName;
      TextView tvCustomerName = ViewBindings.findChildViewById(rootView, id);
      if (tvCustomerName == null) {
        break missingId;
      }

      return new RecycleviewCustomerBinding((CardView) rootView, custDetailBtn, customerImage,
          customerLayout, tvCustomerEmail, tvCustomerName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
