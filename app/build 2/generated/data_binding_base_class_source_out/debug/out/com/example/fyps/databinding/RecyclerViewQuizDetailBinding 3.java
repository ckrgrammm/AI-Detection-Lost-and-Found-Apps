// Generated by view binder compiler. Do not edit!
package com.example.fyps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyps.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerViewQuizDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView firstData;

  @NonNull
  public final MaterialCardView firstImg;

  @NonNull
  public final TextView quizScore;

  @NonNull
  public final ConstraintLayout recycleViewQuiz;

  @NonNull
  public final AppCompatImageView userImageQuiz;

  @NonNull
  public final TextView userQuizPaper;

  @NonNull
  public final TextView userTextTitleQuiz;

  private RecyclerViewQuizDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView firstData, @NonNull MaterialCardView firstImg,
      @NonNull TextView quizScore, @NonNull ConstraintLayout recycleViewQuiz,
      @NonNull AppCompatImageView userImageQuiz, @NonNull TextView userQuizPaper,
      @NonNull TextView userTextTitleQuiz) {
    this.rootView = rootView;
    this.firstData = firstData;
    this.firstImg = firstImg;
    this.quizScore = quizScore;
    this.recycleViewQuiz = recycleViewQuiz;
    this.userImageQuiz = userImageQuiz;
    this.userQuizPaper = userQuizPaper;
    this.userTextTitleQuiz = userTextTitleQuiz;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerViewQuizDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerViewQuizDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_view_quiz_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerViewQuizDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.firstData;
      MaterialCardView firstData = ViewBindings.findChildViewById(rootView, id);
      if (firstData == null) {
        break missingId;
      }

      id = R.id.firstImg;
      MaterialCardView firstImg = ViewBindings.findChildViewById(rootView, id);
      if (firstImg == null) {
        break missingId;
      }

      id = R.id.quizScore;
      TextView quizScore = ViewBindings.findChildViewById(rootView, id);
      if (quizScore == null) {
        break missingId;
      }

      ConstraintLayout recycleViewQuiz = (ConstraintLayout) rootView;

      id = R.id.userImageQuiz;
      AppCompatImageView userImageQuiz = ViewBindings.findChildViewById(rootView, id);
      if (userImageQuiz == null) {
        break missingId;
      }

      id = R.id.userQuizPaper;
      TextView userQuizPaper = ViewBindings.findChildViewById(rootView, id);
      if (userQuizPaper == null) {
        break missingId;
      }

      id = R.id.userTextTitleQuiz;
      TextView userTextTitleQuiz = ViewBindings.findChildViewById(rootView, id);
      if (userTextTitleQuiz == null) {
        break missingId;
      }

      return new RecyclerViewQuizDetailBinding((ConstraintLayout) rootView, firstData, firstImg,
          quizScore, recycleViewQuiz, userImageQuiz, userQuizPaper, userTextTitleQuiz);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
