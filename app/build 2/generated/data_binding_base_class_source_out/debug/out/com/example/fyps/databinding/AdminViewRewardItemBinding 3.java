// Generated by view binder compiler. Do not edit!
package com.example.fyps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyps.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminViewRewardItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final TextView redeemLimitText;

  @NonNull
  public final TextView redeemedCountText;

  @NonNull
  public final TextView rewardDescriptionText;

  @NonNull
  public final CircleImageView rewardImage;

  @NonNull
  public final TextView rewardNameText;

  @NonNull
  public final TextView rewardPointsText;

  private AdminViewRewardItemBinding(@NonNull CardView rootView, @NonNull Button btnDelete,
      @NonNull Button btnEdit, @NonNull TextView redeemLimitText,
      @NonNull TextView redeemedCountText, @NonNull TextView rewardDescriptionText,
      @NonNull CircleImageView rewardImage, @NonNull TextView rewardNameText,
      @NonNull TextView rewardPointsText) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.redeemLimitText = redeemLimitText;
    this.redeemedCountText = redeemedCountText;
    this.rewardDescriptionText = rewardDescriptionText;
    this.rewardImage = rewardImage;
    this.rewardNameText = rewardNameText;
    this.rewardPointsText = rewardPointsText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminViewRewardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminViewRewardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_view_reward_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminViewRewardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.redeemLimitText;
      TextView redeemLimitText = ViewBindings.findChildViewById(rootView, id);
      if (redeemLimitText == null) {
        break missingId;
      }

      id = R.id.redeemedCountText;
      TextView redeemedCountText = ViewBindings.findChildViewById(rootView, id);
      if (redeemedCountText == null) {
        break missingId;
      }

      id = R.id.rewardDescriptionText;
      TextView rewardDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (rewardDescriptionText == null) {
        break missingId;
      }

      id = R.id.rewardImage;
      CircleImageView rewardImage = ViewBindings.findChildViewById(rootView, id);
      if (rewardImage == null) {
        break missingId;
      }

      id = R.id.rewardNameText;
      TextView rewardNameText = ViewBindings.findChildViewById(rootView, id);
      if (rewardNameText == null) {
        break missingId;
      }

      id = R.id.rewardPointsText;
      TextView rewardPointsText = ViewBindings.findChildViewById(rootView, id);
      if (rewardPointsText == null) {
        break missingId;
      }

      return new AdminViewRewardItemBinding((CardView) rootView, btnDelete, btnEdit,
          redeemLimitText, redeemedCountText, rewardDescriptionText, rewardImage, rewardNameText,
          rewardPointsText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
