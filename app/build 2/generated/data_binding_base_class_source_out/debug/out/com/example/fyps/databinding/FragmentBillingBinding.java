// Generated by view binder compiler. Do not edit!
package com.example.fyps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBillingBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final AppCompatButton btnPlaceOlder;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final ImageView imgAddAddress;

  @NonNull
  public final ImageView imgCloseBilling;

  @NonNull
  public final View line;

  @NonNull
  public final View line2;

  @NonNull
  public final View line3;

  @NonNull
  public final ConstraintLayout linear;

  @NonNull
  public final ProgressBar progressbarAddresses;

  @NonNull
  public final ProgressBar progressbarPlaceOrder;

  @NonNull
  public final RecyclerView rvAdresses;

  @NonNull
  public final RecyclerView rvProducts;

  @NonNull
  public final Toolbar toolbarBilling;

  @NonNull
  public final TextView tvPaymentExplanation;

  @NonNull
  public final TextView tvPaymentMethods;

  @NonNull
  public final TextView tvSelectAddressError;

  @NonNull
  public final TextView tvShoppingAddresses;

  @NonNull
  public final TextView tvTotalprice;

  private FragmentBillingBinding(@NonNull NestedScrollView rootView,
      @NonNull AppCompatButton btnPlaceOlder, @NonNull Guideline guideline1,
      @NonNull Guideline guideline2, @NonNull ImageView imgAddAddress,
      @NonNull ImageView imgCloseBilling, @NonNull View line, @NonNull View line2,
      @NonNull View line3, @NonNull ConstraintLayout linear,
      @NonNull ProgressBar progressbarAddresses, @NonNull ProgressBar progressbarPlaceOrder,
      @NonNull RecyclerView rvAdresses, @NonNull RecyclerView rvProducts,
      @NonNull Toolbar toolbarBilling, @NonNull TextView tvPaymentExplanation,
      @NonNull TextView tvPaymentMethods, @NonNull TextView tvSelectAddressError,
      @NonNull TextView tvShoppingAddresses, @NonNull TextView tvTotalprice) {
    this.rootView = rootView;
    this.btnPlaceOlder = btnPlaceOlder;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.imgAddAddress = imgAddAddress;
    this.imgCloseBilling = imgCloseBilling;
    this.line = line;
    this.line2 = line2;
    this.line3 = line3;
    this.linear = linear;
    this.progressbarAddresses = progressbarAddresses;
    this.progressbarPlaceOrder = progressbarPlaceOrder;
    this.rvAdresses = rvAdresses;
    this.rvProducts = rvProducts;
    this.toolbarBilling = toolbarBilling;
    this.tvPaymentExplanation = tvPaymentExplanation;
    this.tvPaymentMethods = tvPaymentMethods;
    this.tvSelectAddressError = tvSelectAddressError;
    this.tvShoppingAddresses = tvShoppingAddresses;
    this.tvTotalprice = tvTotalprice;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBillingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBillingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_billing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBillingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_place_older;
      AppCompatButton btnPlaceOlder = ViewBindings.findChildViewById(rootView, id);
      if (btnPlaceOlder == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.img_add_address;
      ImageView imgAddAddress = ViewBindings.findChildViewById(rootView, id);
      if (imgAddAddress == null) {
        break missingId;
      }

      id = R.id.img_close_billing;
      ImageView imgCloseBilling = ViewBindings.findChildViewById(rootView, id);
      if (imgCloseBilling == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.line2;
      View line2 = ViewBindings.findChildViewById(rootView, id);
      if (line2 == null) {
        break missingId;
      }

      id = R.id.line3;
      View line3 = ViewBindings.findChildViewById(rootView, id);
      if (line3 == null) {
        break missingId;
      }

      id = R.id.linear;
      ConstraintLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.progressbar_addresses;
      ProgressBar progressbarAddresses = ViewBindings.findChildViewById(rootView, id);
      if (progressbarAddresses == null) {
        break missingId;
      }

      id = R.id.progressbar_placeOrder;
      ProgressBar progressbarPlaceOrder = ViewBindings.findChildViewById(rootView, id);
      if (progressbarPlaceOrder == null) {
        break missingId;
      }

      id = R.id.rv_adresses;
      RecyclerView rvAdresses = ViewBindings.findChildViewById(rootView, id);
      if (rvAdresses == null) {
        break missingId;
      }

      id = R.id.rv_products;
      RecyclerView rvProducts = ViewBindings.findChildViewById(rootView, id);
      if (rvProducts == null) {
        break missingId;
      }

      id = R.id.toolbar_billing;
      Toolbar toolbarBilling = ViewBindings.findChildViewById(rootView, id);
      if (toolbarBilling == null) {
        break missingId;
      }

      id = R.id.tv_payment_explanation;
      TextView tvPaymentExplanation = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentExplanation == null) {
        break missingId;
      }

      id = R.id.tv_payment_methods;
      TextView tvPaymentMethods = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentMethods == null) {
        break missingId;
      }

      id = R.id.tv_select_address_error;
      TextView tvSelectAddressError = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectAddressError == null) {
        break missingId;
      }

      id = R.id.tv_shopping_addresses;
      TextView tvShoppingAddresses = ViewBindings.findChildViewById(rootView, id);
      if (tvShoppingAddresses == null) {
        break missingId;
      }

      id = R.id.tv_totalprice;
      TextView tvTotalprice = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalprice == null) {
        break missingId;
      }

      return new FragmentBillingBinding((NestedScrollView) rootView, btnPlaceOlder, guideline1,
          guideline2, imgAddAddress, imgCloseBilling, line, line2, line3, linear,
          progressbarAddresses, progressbarPlaceOrder, rvAdresses, rvProducts, toolbarBilling,
          tvPaymentExplanation, tvPaymentMethods, tvSelectAddressError, tvShoppingAddresses,
          tvTotalprice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
