// Generated by view binder compiler. Do not edit!
package com.example.fyps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerViewItemSettingBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView causeSymptomImg;

  @NonNull
  public final CardView causeSymptomLayout;

  @NonNull
  public final TextView causeSymptomName;

  @NonNull
  public final ImageView causeSymptomTouch;

  private RecyclerViewItemSettingBinding(@NonNull CardView rootView,
      @NonNull ImageView causeSymptomImg, @NonNull CardView causeSymptomLayout,
      @NonNull TextView causeSymptomName, @NonNull ImageView causeSymptomTouch) {
    this.rootView = rootView;
    this.causeSymptomImg = causeSymptomImg;
    this.causeSymptomLayout = causeSymptomLayout;
    this.causeSymptomName = causeSymptomName;
    this.causeSymptomTouch = causeSymptomTouch;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerViewItemSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerViewItemSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_view_item_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerViewItemSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cause_symptom_img;
      ImageView causeSymptomImg = ViewBindings.findChildViewById(rootView, id);
      if (causeSymptomImg == null) {
        break missingId;
      }

      CardView causeSymptomLayout = (CardView) rootView;

      id = R.id.cause_symptom_name;
      TextView causeSymptomName = ViewBindings.findChildViewById(rootView, id);
      if (causeSymptomName == null) {
        break missingId;
      }

      id = R.id.cause_symptom_touch;
      ImageView causeSymptomTouch = ViewBindings.findChildViewById(rootView, id);
      if (causeSymptomTouch == null) {
        break missingId;
      }

      return new RecyclerViewItemSettingBinding((CardView) rootView, causeSymptomImg,
          causeSymptomLayout, causeSymptomName, causeSymptomTouch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
