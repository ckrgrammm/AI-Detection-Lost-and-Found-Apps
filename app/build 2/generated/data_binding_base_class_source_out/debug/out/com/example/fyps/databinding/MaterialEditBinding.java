// Generated by view binder compiler. Do not edit!
package com.example.fyps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fyps.R;
import com.google.android.gms.maps.MapView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MaterialEditBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonClaimed;

  @NonNull
  public final Button buttonDelete;

  @NonNull
  public final Button buttonOpenCamera;

  @NonNull
  public final Button buttonSelectImage;

  @NonNull
  public final Button buttonSubmit;

  @NonNull
  public final TextView createItemTitle;

  @NonNull
  public final TextInputEditText editTextDateTime;

  @NonNull
  public final TextInputEditText editTextItemDescription;

  @NonNull
  public final TextInputEditText editTextItemName;

  @NonNull
  public final TextInputEditText editTextItemVenue;

  @NonNull
  public final ImageView imageViewCourseBanner;

  @NonNull
  public final TextInputLayout layoutDateTime;

  @NonNull
  public final TextInputLayout layoutDesc;

  @NonNull
  public final TextInputLayout layoutItemCategory;

  @NonNull
  public final TextInputLayout layoutName;

  @NonNull
  public final TextInputLayout layoutVenue;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final LinearLayout locationLayout;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final AutoCompleteTextView spinnerItemCategory;

  private MaterialEditBinding(@NonNull ScrollView rootView, @NonNull Button buttonClaimed,
      @NonNull Button buttonDelete, @NonNull Button buttonOpenCamera,
      @NonNull Button buttonSelectImage, @NonNull Button buttonSubmit,
      @NonNull TextView createItemTitle, @NonNull TextInputEditText editTextDateTime,
      @NonNull TextInputEditText editTextItemDescription,
      @NonNull TextInputEditText editTextItemName, @NonNull TextInputEditText editTextItemVenue,
      @NonNull ImageView imageViewCourseBanner, @NonNull TextInputLayout layoutDateTime,
      @NonNull TextInputLayout layoutDesc, @NonNull TextInputLayout layoutItemCategory,
      @NonNull TextInputLayout layoutName, @NonNull TextInputLayout layoutVenue,
      @NonNull LinearLayout linearLayout5, @NonNull LinearLayout locationLayout,
      @NonNull MapView mapView, @NonNull AutoCompleteTextView spinnerItemCategory) {
    this.rootView = rootView;
    this.buttonClaimed = buttonClaimed;
    this.buttonDelete = buttonDelete;
    this.buttonOpenCamera = buttonOpenCamera;
    this.buttonSelectImage = buttonSelectImage;
    this.buttonSubmit = buttonSubmit;
    this.createItemTitle = createItemTitle;
    this.editTextDateTime = editTextDateTime;
    this.editTextItemDescription = editTextItemDescription;
    this.editTextItemName = editTextItemName;
    this.editTextItemVenue = editTextItemVenue;
    this.imageViewCourseBanner = imageViewCourseBanner;
    this.layoutDateTime = layoutDateTime;
    this.layoutDesc = layoutDesc;
    this.layoutItemCategory = layoutItemCategory;
    this.layoutName = layoutName;
    this.layoutVenue = layoutVenue;
    this.linearLayout5 = linearLayout5;
    this.locationLayout = locationLayout;
    this.mapView = mapView;
    this.spinnerItemCategory = spinnerItemCategory;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static MaterialEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MaterialEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.material_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MaterialEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonClaimed;
      Button buttonClaimed = ViewBindings.findChildViewById(rootView, id);
      if (buttonClaimed == null) {
        break missingId;
      }

      id = R.id.buttonDelete;
      Button buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonOpenCamera;
      Button buttonOpenCamera = ViewBindings.findChildViewById(rootView, id);
      if (buttonOpenCamera == null) {
        break missingId;
      }

      id = R.id.buttonSelectImage;
      Button buttonSelectImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectImage == null) {
        break missingId;
      }

      id = R.id.buttonSubmit;
      Button buttonSubmit = ViewBindings.findChildViewById(rootView, id);
      if (buttonSubmit == null) {
        break missingId;
      }

      id = R.id.createItemTitle;
      TextView createItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (createItemTitle == null) {
        break missingId;
      }

      id = R.id.editTextDateTime;
      TextInputEditText editTextDateTime = ViewBindings.findChildViewById(rootView, id);
      if (editTextDateTime == null) {
        break missingId;
      }

      id = R.id.editTextItemDescription;
      TextInputEditText editTextItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextItemDescription == null) {
        break missingId;
      }

      id = R.id.editTextItemName;
      TextInputEditText editTextItemName = ViewBindings.findChildViewById(rootView, id);
      if (editTextItemName == null) {
        break missingId;
      }

      id = R.id.editTextItemVenue;
      TextInputEditText editTextItemVenue = ViewBindings.findChildViewById(rootView, id);
      if (editTextItemVenue == null) {
        break missingId;
      }

      id = R.id.imageViewCourseBanner;
      ImageView imageViewCourseBanner = ViewBindings.findChildViewById(rootView, id);
      if (imageViewCourseBanner == null) {
        break missingId;
      }

      id = R.id.layout_dateTime;
      TextInputLayout layoutDateTime = ViewBindings.findChildViewById(rootView, id);
      if (layoutDateTime == null) {
        break missingId;
      }

      id = R.id.layout_desc;
      TextInputLayout layoutDesc = ViewBindings.findChildViewById(rootView, id);
      if (layoutDesc == null) {
        break missingId;
      }

      id = R.id.layout_itemCategory;
      TextInputLayout layoutItemCategory = ViewBindings.findChildViewById(rootView, id);
      if (layoutItemCategory == null) {
        break missingId;
      }

      id = R.id.layout_name;
      TextInputLayout layoutName = ViewBindings.findChildViewById(rootView, id);
      if (layoutName == null) {
        break missingId;
      }

      id = R.id.layout_venue;
      TextInputLayout layoutVenue = ViewBindings.findChildViewById(rootView, id);
      if (layoutVenue == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.locationLayout;
      LinearLayout locationLayout = ViewBindings.findChildViewById(rootView, id);
      if (locationLayout == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.spinnerItemCategory;
      AutoCompleteTextView spinnerItemCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerItemCategory == null) {
        break missingId;
      }

      return new MaterialEditBinding((ScrollView) rootView, buttonClaimed, buttonDelete,
          buttonOpenCamera, buttonSelectImage, buttonSubmit, createItemTitle, editTextDateTime,
          editTextItemDescription, editTextItemName, editTextItemVenue, imageViewCourseBanner,
          layoutDateTime, layoutDesc, layoutItemCategory, layoutName, layoutVenue, linearLayout5,
          locationLayout, mapView, spinnerItemCategory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
