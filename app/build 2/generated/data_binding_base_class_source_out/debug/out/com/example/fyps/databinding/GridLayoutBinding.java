// Generated by data binding compiler. Do not edit!
package com.example.fyps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.fyps.R;
import com.example.fyps.model.Material;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class GridLayoutBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardViewStatus;

  @NonNull
  public final ImageView iconItem;

  @NonNull
  public final LinearLayout itemContainer;

  @NonNull
  public final TextView itemName;

  @NonNull
  public final TextView productStatus;

  @NonNull
  public final TextView reporterName;

  @Bindable
  protected Material mProductModel;

  protected GridLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cardViewStatus, ImageView iconItem, LinearLayout itemContainer, TextView itemName,
      TextView productStatus, TextView reporterName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardViewStatus = cardViewStatus;
    this.iconItem = iconItem;
    this.itemContainer = itemContainer;
    this.itemName = itemName;
    this.productStatus = productStatus;
    this.reporterName = reporterName;
  }

  public abstract void setProductModel(@Nullable Material productModel);

  @Nullable
  public Material getProductModel() {
    return mProductModel;
  }

  @NonNull
  public static GridLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.grid_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static GridLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<GridLayoutBinding>inflateInternal(inflater, R.layout.grid_layout, root, attachToRoot, component);
  }

  @NonNull
  public static GridLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.grid_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static GridLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<GridLayoutBinding>inflateInternal(inflater, R.layout.grid_layout, null, false, component);
  }

  public static GridLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static GridLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (GridLayoutBinding)bind(component, view, R.layout.grid_layout);
  }
}
